// autogenerated

// swiftlint:disable all
import Foundation

public struct WinBackOfferCreateRequest: Hashable, Codable, Sendable {
    public var data: Data

    public var included: [WinBackOfferPriceInlineCreate]?

    public init(
        data: Data,
        included: [WinBackOfferPriceInlineCreate]? = nil
    ) {
        self.data = data
        self.included = included
    }

    private enum CodingKeys: String, CodingKey {
        case data
        case included
    }

    public struct Data: Hashable, Codable, Sendable {
        public var type: `Type`

        public var attributes: Attributes

        public var relationships: Relationships

        public init(
            type: `Type`,
            attributes: Attributes,
            relationships: Relationships
        ) {
            self.type = type
            self.attributes = attributes
            self.relationships = relationships
        }

        private enum CodingKeys: String, CodingKey {
            case type
            case attributes
            case relationships
        }

        public enum `Type`: String, Hashable, Codable, Sendable {
            case winBackOffers
        }

        public struct Attributes: Hashable, Codable, Sendable {
            public var customerEligibilityPaidSubscriptionDurationInMonths: Int

            public var customerEligibilityTimeSinceLastSubscribedInMonths: IntegerRange

            public var customerEligibilityWaitBetweenOffersInMonths: Int?

            public var duration: SubscriptionOfferDuration

            public var endDate: String?

            public var offerId: String

            public var offerMode: SubscriptionOfferMode

            public var periodCount: Int

            public var priority: Priority

            public var promotionIntent: PromotionIntent?

            public var referenceName: String

            public var startDate: String

            public init(
                customerEligibilityPaidSubscriptionDurationInMonths: Int,
                customerEligibilityTimeSinceLastSubscribedInMonths: IntegerRange,
                customerEligibilityWaitBetweenOffersInMonths: Int? = nil,
                duration: SubscriptionOfferDuration,
                endDate: String? = nil,
                offerId: String,
                offerMode: SubscriptionOfferMode,
                periodCount: Int,
                priority: Priority,
                promotionIntent: PromotionIntent? = nil,
                referenceName: String,
                startDate: String
            ) {
                self.customerEligibilityPaidSubscriptionDurationInMonths = customerEligibilityPaidSubscriptionDurationInMonths
                self.customerEligibilityTimeSinceLastSubscribedInMonths = customerEligibilityTimeSinceLastSubscribedInMonths
                self.customerEligibilityWaitBetweenOffersInMonths = customerEligibilityWaitBetweenOffersInMonths
                self.duration = duration
                self.endDate = endDate
                self.offerId = offerId
                self.offerMode = offerMode
                self.periodCount = periodCount
                self.priority = priority
                self.promotionIntent = promotionIntent
                self.referenceName = referenceName
                self.startDate = startDate
            }

            private enum CodingKeys: String, CodingKey {
                case customerEligibilityPaidSubscriptionDurationInMonths
                case customerEligibilityTimeSinceLastSubscribedInMonths
                case customerEligibilityWaitBetweenOffersInMonths
                case duration
                case endDate
                case offerId
                case offerMode
                case periodCount
                case priority
                case promotionIntent
                case referenceName
                case startDate
            }

            public struct Priority: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
                public static var high: Self {
                    .init(rawValue: "HIGH")
                }

                public static var normal: Self {
                    .init(rawValue: "NORMAL")
                }

                public var description: String {
                    rawValue
                }

                public var rawValue: String

                public init(rawValue: String) {
                    self.rawValue = rawValue
                }
            }

            public struct PromotionIntent: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
                public static var notPromoted: Self {
                    .init(rawValue: "NOT_PROMOTED")
                }

                public static var useAutoGeneratedAssets: Self {
                    .init(rawValue: "USE_AUTO_GENERATED_ASSETS")
                }

                public var description: String {
                    rawValue
                }

                public var rawValue: String

                public init(rawValue: String) {
                    self.rawValue = rawValue
                }
            }
        }

        public struct Relationships: Hashable, Codable, Sendable {
            public var prices: Prices

            public var subscription: Subscription

            public init(
                prices: Prices,
                subscription: Subscription
            ) {
                self.prices = prices
                self.subscription = subscription
            }

            private enum CodingKeys: String, CodingKey {
                case prices
                case subscription
            }

            public struct Prices: Hashable, Codable, Sendable {
                public var data: [Data]

                public init(data: [Data]) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case winBackOfferPrices
                    }
                }
            }

            public struct Subscription: Hashable, Codable, Sendable {
                public var data: Data

                public init(data: Data) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case subscriptions
                    }
                }
            }
        }
    }
}

// swiftlint:enable all
