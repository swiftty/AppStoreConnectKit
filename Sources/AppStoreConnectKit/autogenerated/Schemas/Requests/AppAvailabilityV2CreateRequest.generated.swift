// autogenerated

// swiftlint:disable all
import Foundation

public struct AppAvailabilityV2CreateRequest: Hashable, Codable {
    public var data: Data

    public var included: [TerritoryAvailabilityInlineCreate]?

    public init(
        data: Data,
        included: [TerritoryAvailabilityInlineCreate]? = nil
    ) {
        self.data = data
        self.included = included
    }

    private enum CodingKeys: String, CodingKey {
        case data
        case included
    }

    public struct Data: Hashable, Codable {
        public var type: `Type`

        public var attributes: Attributes

        public var relationships: Relationships

        public init(
            type: `Type`,
            attributes: Attributes,
            relationships: Relationships
        ) {
            self.type = type
            self.attributes = attributes
            self.relationships = relationships
        }

        private enum CodingKeys: String, CodingKey {
            case type
            case attributes
            case relationships
        }

        public enum `Type`: String, Hashable, Codable {
            case appAvailabilities
        }

        public struct Attributes: Hashable, Codable {
            public var availableInNewTerritories: Bool

            public init(availableInNewTerritories: Bool) {
                self.availableInNewTerritories = availableInNewTerritories
            }

            private enum CodingKeys: String, CodingKey {
                case availableInNewTerritories
            }
        }

        public struct Relationships: Hashable, Codable {
            public var app: App

            public var territoryAvailabilities: TerritoryAvailabilities

            public init(
                app: App,
                territoryAvailabilities: TerritoryAvailabilities
            ) {
                self.app = app
                self.territoryAvailabilities = territoryAvailabilities
            }

            private enum CodingKeys: String, CodingKey {
                case app
                case territoryAvailabilities
            }

            public struct App: Hashable, Codable {
                public var data: Data

                public init(data: Data) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable {
                        case apps
                    }
                }
            }

            public struct TerritoryAvailabilities: Hashable, Codable {
                public var data: [Data]

                public init(data: [Data]) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable {
                        case territoryAvailabilities
                    }
                }
            }
        }
    }
}

// swiftlint:enable all
