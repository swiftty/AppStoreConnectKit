// autogenerated

// swiftlint:disable all
import Foundation

public struct GameCenterMatchmakingRuleSetTestCreateRequest: Hashable, Codable {
    public var data: Data

    public var included: [Included]?

    public init(
        data: Data,
        included: [Included]? = nil
    ) {
        self.data = data
        self.included = included
    }

    private enum CodingKeys: String, CodingKey {
        case data
        case included
    }

    public struct Data: Hashable, Codable {
        public var type: `Type`

        public var relationships: Relationships

        public init(
            type: `Type`,
            relationships: Relationships
        ) {
            self.type = type
            self.relationships = relationships
        }

        private enum CodingKeys: String, CodingKey {
            case type
            case relationships
        }

        public enum `Type`: String, Hashable, Codable {
            case gameCenterMatchmakingRuleSetTests
        }

        public struct Relationships: Hashable, Codable {
            public var matchmakingRequests: MatchmakingRequests

            public var matchmakingRuleSet: MatchmakingRuleSet

            public init(
                matchmakingRequests: MatchmakingRequests,
                matchmakingRuleSet: MatchmakingRuleSet
            ) {
                self.matchmakingRequests = matchmakingRequests
                self.matchmakingRuleSet = matchmakingRuleSet
            }

            private enum CodingKeys: String, CodingKey {
                case matchmakingRequests
                case matchmakingRuleSet
            }

            public struct MatchmakingRequests: Hashable, Codable {
                public var data: [Data]

                public init(data: [Data]) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable {
                        case gameCenterMatchmakingTestRequests
                    }
                }
            }

            public struct MatchmakingRuleSet: Hashable, Codable {
                public var data: Data

                public init(data: Data) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable {
                        case gameCenterMatchmakingRuleSets
                    }
                }
            }
        }
    }

    public enum Included: Hashable, Codable {
        case gameCenterMatchmakingTestPlayerPropertyInlineCreate(GameCenterMatchmakingTestPlayerPropertyInlineCreate)
        case gameCenterMatchmakingTestRequestInlineCreate(GameCenterMatchmakingTestRequestInlineCreate)

        public init(from decoder: Decoder) throws {
            self = try {
                var lastError: Error!
                do {
                    return .gameCenterMatchmakingTestPlayerPropertyInlineCreate(try GameCenterMatchmakingTestPlayerPropertyInlineCreate(from: decoder))
                } catch {
                    lastError = error
                }
                do {
                    return .gameCenterMatchmakingTestRequestInlineCreate(try GameCenterMatchmakingTestRequestInlineCreate(from: decoder))
                } catch {
                    lastError = error
                }
                throw lastError
            }()
        }

        public func encode(to encoder: Encoder) throws {
            switch self {
            case .gameCenterMatchmakingTestPlayerPropertyInlineCreate(let value):
                try value.encode(to: encoder)

            case .gameCenterMatchmakingTestRequestInlineCreate(let value):
                try value.encode(to: encoder)
            }
        }
    }
}

// swiftlint:enable all
