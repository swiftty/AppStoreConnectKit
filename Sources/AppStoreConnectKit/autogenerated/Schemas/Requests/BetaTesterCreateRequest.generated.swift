// autogenerated

// swiftlint:disable all
import Foundation

public struct BetaTesterCreateRequest: Hashable, Codable, Sendable {
    public var data: Data

    public init(data: Data) {
        self.data = data
    }

    private enum CodingKeys: String, CodingKey {
        case data
    }

    public struct Data: Hashable, Codable, Sendable {
        public var type: `Type`

        public var attributes: Attributes

        public var relationships: Relationships?

        public init(
            type: `Type`,
            attributes: Attributes,
            relationships: Relationships? = nil
        ) {
            self.type = type
            self.attributes = attributes
            self.relationships = relationships
        }

        private enum CodingKeys: String, CodingKey {
            case type
            case attributes
            case relationships
        }

        public enum `Type`: String, Hashable, Codable, Sendable {
            case betaTesters
        }

        public struct Attributes: Hashable, Codable, Sendable {
            public var email: String

            public var firstName: String?

            public var lastName: String?

            public init(
                email: String,
                firstName: String? = nil,
                lastName: String? = nil
            ) {
                self.email = email
                self.firstName = firstName
                self.lastName = lastName
            }

            private enum CodingKeys: String, CodingKey {
                case email
                case firstName
                case lastName
            }
        }

        public struct Relationships: Hashable, Codable, Sendable {
            public var betaGroups: BetaGroups?

            public var builds: Builds?

            public init(
                betaGroups: BetaGroups? = nil,
                builds: Builds? = nil
            ) {
                self.betaGroups = betaGroups
                self.builds = builds
            }

            private enum CodingKeys: String, CodingKey {
                case betaGroups
                case builds
            }

            public struct BetaGroups: Hashable, Codable, Sendable {
                public var data: [Data]?

                public init(data: [Data]? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case betaGroups
                    }
                }
            }

            public struct Builds: Hashable, Codable, Sendable {
                public var data: [Data]?

                public init(data: [Data]? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case builds
                    }
                }
            }
        }
    }
}

// swiftlint:enable all
