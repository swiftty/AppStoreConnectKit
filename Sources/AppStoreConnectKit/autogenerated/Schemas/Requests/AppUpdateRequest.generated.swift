// autogenerated

// swiftlint:disable all
import Foundation

public struct AppUpdateRequest: Hashable, Codable, Sendable {
    public var data: Data

    public init(data: Data) {
        self.data = data
    }

    private enum CodingKeys: String, CodingKey {
        case data
    }

    public struct Data: Hashable, Codable, Sendable {
        public var id: String

        public var type: `Type`

        public var attributes: Attributes?

        public init(
            id: String,
            type: `Type`,
            attributes: Attributes? = nil
        ) {
            self.id = id
            self.type = type
            self.attributes = attributes
        }

        private enum CodingKeys: String, CodingKey {
            case id
            case type
            case attributes
        }

        public enum `Type`: String, Hashable, Codable, Sendable {
            case apps
        }

        public struct Attributes: Hashable, Codable, Sendable {
            public var accessibilityUrl: URL?

            public var bundleId: String?

            public var contentRightsDeclaration: ContentRightsDeclaration?

            public var primaryLocale: String?

            public var streamlinedPurchasingEnabled: Bool?

            public var subscriptionStatusUrl: URL?

            public var subscriptionStatusUrlForSandbox: URL?

            public var subscriptionStatusUrlVersion: SubscriptionStatusUrlVersion?

            public var subscriptionStatusUrlVersionForSandbox: SubscriptionStatusUrlVersion?

            public init(
                accessibilityUrl: URL? = nil,
                bundleId: String? = nil,
                contentRightsDeclaration: ContentRightsDeclaration? = nil,
                primaryLocale: String? = nil,
                streamlinedPurchasingEnabled: Bool? = nil,
                subscriptionStatusUrl: URL? = nil,
                subscriptionStatusUrlForSandbox: URL? = nil,
                subscriptionStatusUrlVersion: SubscriptionStatusUrlVersion? = nil,
                subscriptionStatusUrlVersionForSandbox: SubscriptionStatusUrlVersion? = nil
            ) {
                self.accessibilityUrl = accessibilityUrl
                self.bundleId = bundleId
                self.contentRightsDeclaration = contentRightsDeclaration
                self.primaryLocale = primaryLocale
                self.streamlinedPurchasingEnabled = streamlinedPurchasingEnabled
                self.subscriptionStatusUrl = subscriptionStatusUrl
                self.subscriptionStatusUrlForSandbox = subscriptionStatusUrlForSandbox
                self.subscriptionStatusUrlVersion = subscriptionStatusUrlVersion
                self.subscriptionStatusUrlVersionForSandbox = subscriptionStatusUrlVersionForSandbox
            }

            private enum CodingKeys: String, CodingKey {
                case accessibilityUrl
                case bundleId
                case contentRightsDeclaration
                case primaryLocale
                case streamlinedPurchasingEnabled
                case subscriptionStatusUrl
                case subscriptionStatusUrlForSandbox
                case subscriptionStatusUrlVersion
                case subscriptionStatusUrlVersionForSandbox
            }

            public struct ContentRightsDeclaration: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
                public static var doesNotUseThirdPartyContent: Self {
                    .init(rawValue: "DOES_NOT_USE_THIRD_PARTY_CONTENT")
                }

                public static var usesThirdPartyContent: Self {
                    .init(rawValue: "USES_THIRD_PARTY_CONTENT")
                }

                public var description: String {
                    rawValue
                }

                public var rawValue: String

                public init(rawValue: String) {
                    self.rawValue = rawValue
                }
            }
        }
    }
}

// swiftlint:enable all
