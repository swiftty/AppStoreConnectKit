// autogenerated

// swiftlint:disable all
import Foundation

public struct GameCenterActivityCreateRequest: Hashable, Codable, Sendable {
    public var data: Data

    public init(data: Data) {
        self.data = data
    }

    private enum CodingKeys: String, CodingKey {
        case data
    }

    public struct Data: Hashable, Codable, Sendable {
        public var type: `Type`

        public var attributes: Attributes

        public var relationships: Relationships?

        public init(
            type: `Type`,
            attributes: Attributes,
            relationships: Relationships? = nil
        ) {
            self.type = type
            self.attributes = attributes
            self.relationships = relationships
        }

        private enum CodingKeys: String, CodingKey {
            case type
            case attributes
            case relationships
        }

        public enum `Type`: String, Hashable, Codable, Sendable {
            case gameCenterActivities
        }

        public struct Attributes: Hashable, Codable, Sendable {
            public var maximumPlayersCount: Int?

            public var minimumPlayersCount: Int?

            public var playStyle: PlayStyle?

            public var properties: [String: String]?

            public var referenceName: String

            public var supportsPartyCode: Bool?

            public var vendorIdentifier: String

            public init(
                maximumPlayersCount: Int? = nil,
                minimumPlayersCount: Int? = nil,
                playStyle: PlayStyle? = nil,
                properties: [String: String]? = nil,
                referenceName: String,
                supportsPartyCode: Bool? = nil,
                vendorIdentifier: String
            ) {
                self.maximumPlayersCount = maximumPlayersCount
                self.minimumPlayersCount = minimumPlayersCount
                self.playStyle = playStyle
                self.properties = properties
                self.referenceName = referenceName
                self.supportsPartyCode = supportsPartyCode
                self.vendorIdentifier = vendorIdentifier
            }

            private enum CodingKeys: String, CodingKey {
                case maximumPlayersCount
                case minimumPlayersCount
                case playStyle
                case properties
                case referenceName
                case supportsPartyCode
                case vendorIdentifier
            }

            public struct PlayStyle: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
                public static var asynchronous: Self {
                    .init(rawValue: "ASYNCHRONOUS")
                }

                public static var synchronous: Self {
                    .init(rawValue: "SYNCHRONOUS")
                }

                public var description: String {
                    rawValue
                }

                public var rawValue: String

                public init(rawValue: String) {
                    self.rawValue = rawValue
                }
            }
        }

        public struct Relationships: Hashable, Codable, Sendable {
            public var gameCenterDetail: GameCenterDetail?

            public var gameCenterGroup: GameCenterGroup?

            public init(
                gameCenterDetail: GameCenterDetail? = nil,
                gameCenterGroup: GameCenterGroup? = nil
            ) {
                self.gameCenterDetail = gameCenterDetail
                self.gameCenterGroup = gameCenterGroup
            }

            private enum CodingKeys: String, CodingKey {
                case gameCenterDetail
                case gameCenterGroup
            }

            public struct GameCenterDetail: Hashable, Codable, Sendable {
                public var data: Data?

                public init(data: Data? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case gameCenterDetails
                    }
                }
            }

            public struct GameCenterGroup: Hashable, Codable, Sendable {
                public var data: Data?

                public init(data: Data? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case gameCenterGroups
                    }
                }
            }
        }
    }
}

// swiftlint:enable all
