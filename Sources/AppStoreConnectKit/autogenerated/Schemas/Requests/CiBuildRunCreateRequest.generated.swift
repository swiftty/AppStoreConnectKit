// autogenerated

// swiftlint:disable all
import Foundation

public struct CiBuildRunCreateRequest: Hashable, Codable, Sendable {
    public var data: Data

    public init(data: Data) {
        self.data = data
    }

    private enum CodingKeys: String, CodingKey {
        case data
    }

    public struct Data: Hashable, Codable, Sendable {
        public var type: `Type`

        public var attributes: Attributes?

        public var relationships: Relationships?

        public init(
            type: `Type`,
            attributes: Attributes? = nil,
            relationships: Relationships? = nil
        ) {
            self.type = type
            self.attributes = attributes
            self.relationships = relationships
        }

        private enum CodingKeys: String, CodingKey {
            case type
            case attributes
            case relationships
        }

        public enum `Type`: String, Hashable, Codable, Sendable {
            case ciBuildRuns
        }

        public struct Attributes: Hashable, Codable, Sendable {
            public var clean: Bool?

            public init(clean: Bool? = nil) {
                self.clean = clean
            }

            private enum CodingKeys: String, CodingKey {
                case clean
            }
        }

        public struct Relationships: Hashable, Codable, Sendable {
            public var buildRun: BuildRun?

            public var pullRequest: PullRequest?

            public var sourceBranchOrTag: SourceBranchOrTag?

            public var workflow: Workflow?

            public init(
                buildRun: BuildRun? = nil,
                pullRequest: PullRequest? = nil,
                sourceBranchOrTag: SourceBranchOrTag? = nil,
                workflow: Workflow? = nil
            ) {
                self.buildRun = buildRun
                self.pullRequest = pullRequest
                self.sourceBranchOrTag = sourceBranchOrTag
                self.workflow = workflow
            }

            private enum CodingKeys: String, CodingKey {
                case buildRun
                case pullRequest
                case sourceBranchOrTag
                case workflow
            }

            public struct BuildRun: Hashable, Codable, Sendable {
                public var data: Data?

                public init(data: Data? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case ciBuildRuns
                    }
                }
            }

            public struct PullRequest: Hashable, Codable, Sendable {
                public var data: Data?

                public init(data: Data? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case scmPullRequests
                    }
                }
            }

            public struct SourceBranchOrTag: Hashable, Codable, Sendable {
                public var data: Data?

                public init(data: Data? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case scmGitReferences
                    }
                }
            }

            public struct Workflow: Hashable, Codable, Sendable {
                public var data: Data?

                public init(data: Data? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case ciWorkflows
                    }
                }
            }
        }
    }
}

// swiftlint:enable all
