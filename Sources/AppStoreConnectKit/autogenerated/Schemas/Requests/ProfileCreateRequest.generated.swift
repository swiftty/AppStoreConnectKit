// autogenerated

// swiftlint:disable all
import Foundation

public struct ProfileCreateRequest: Hashable, Codable, Sendable {
    public var data: Data

    public init(data: Data) {
        self.data = data
    }

    private enum CodingKeys: String, CodingKey {
        case data
    }

    public struct Data: Hashable, Codable, Sendable {
        public var type: `Type`

        public var attributes: Attributes

        public var relationships: Relationships

        public init(
            type: `Type`,
            attributes: Attributes,
            relationships: Relationships
        ) {
            self.type = type
            self.attributes = attributes
            self.relationships = relationships
        }

        private enum CodingKeys: String, CodingKey {
            case type
            case attributes
            case relationships
        }

        public enum `Type`: String, Hashable, Codable, Sendable {
            case profiles
        }

        public struct Attributes: Hashable, Codable, Sendable {
            public var name: String

            public var profileType: ProfileType

            public init(
                name: String,
                profileType: ProfileType
            ) {
                self.name = name
                self.profileType = profileType
            }

            private enum CodingKeys: String, CodingKey {
                case name
                case profileType
            }

            public struct ProfileType: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
                public static var iOSAppAdhoc: Self {
                    .init(rawValue: "IOS_APP_ADHOC")
                }

                public static var iOSAppDevelopment: Self {
                    .init(rawValue: "IOS_APP_DEVELOPMENT")
                }

                public static var iOSAppInhouse: Self {
                    .init(rawValue: "IOS_APP_INHOUSE")
                }

                public static var iOSAppStore: Self {
                    .init(rawValue: "IOS_APP_STORE")
                }

                public static var macAppDevelopment: Self {
                    .init(rawValue: "MAC_APP_DEVELOPMENT")
                }

                public static var macAppDirect: Self {
                    .init(rawValue: "MAC_APP_DIRECT")
                }

                public static var macAppStore: Self {
                    .init(rawValue: "MAC_APP_STORE")
                }

                public static var macCatalystAppDevelopment: Self {
                    .init(rawValue: "MAC_CATALYST_APP_DEVELOPMENT")
                }

                public static var macCatalystAppDirect: Self {
                    .init(rawValue: "MAC_CATALYST_APP_DIRECT")
                }

                public static var macCatalystAppStore: Self {
                    .init(rawValue: "MAC_CATALYST_APP_STORE")
                }

                public static var tvOSAppAdhoc: Self {
                    .init(rawValue: "TVOS_APP_ADHOC")
                }

                public static var tvOSAppDevelopment: Self {
                    .init(rawValue: "TVOS_APP_DEVELOPMENT")
                }

                public static var tvOSAppInhouse: Self {
                    .init(rawValue: "TVOS_APP_INHOUSE")
                }

                public static var tvOSAppStore: Self {
                    .init(rawValue: "TVOS_APP_STORE")
                }

                public var description: String {
                    rawValue
                }

                public var rawValue: String

                public init(rawValue: String) {
                    self.rawValue = rawValue
                }
            }
        }

        public struct Relationships: Hashable, Codable, Sendable {
            public var bundleId: BundleId

            public var certificates: Certificates

            public var devices: Devices?

            public init(
                bundleId: BundleId,
                certificates: Certificates,
                devices: Devices? = nil
            ) {
                self.bundleId = bundleId
                self.certificates = certificates
                self.devices = devices
            }

            private enum CodingKeys: String, CodingKey {
                case bundleId
                case certificates
                case devices
            }

            public struct BundleId: Hashable, Codable, Sendable {
                public var data: Data

                public init(data: Data) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case bundleIds
                    }
                }
            }

            public struct Certificates: Hashable, Codable, Sendable {
                public var data: [Data]

                public init(data: [Data]) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case certificates
                    }
                }
            }

            public struct Devices: Hashable, Codable, Sendable {
                public var data: [Data]?

                public init(data: [Data]? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case devices
                    }
                }
            }
        }
    }
}

// swiftlint:enable all
