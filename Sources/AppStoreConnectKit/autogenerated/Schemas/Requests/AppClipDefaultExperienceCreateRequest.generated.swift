// autogenerated

// swiftlint:disable all
import Foundation

public struct AppClipDefaultExperienceCreateRequest: Hashable, Codable {
    public var data: Data

    public init(data: Data) {
        self.data = data
    }

    private enum CodingKeys: String, CodingKey {
        case data
    }

    public struct Data: Hashable, Codable {
        public var type: `Type`

        public var attributes: Attributes?

        public var relationships: Relationships

        public init(
            type: `Type`,
            attributes: Attributes? = nil,
            relationships: Relationships
        ) {
            self.type = type
            self.attributes = attributes
            self.relationships = relationships
        }

        private enum CodingKeys: String, CodingKey {
            case type
            case attributes
            case relationships
        }

        public enum `Type`: Hashable, Codable, RawRepresentable {
            case appClipDefaultExperiences
            case unknown(String)

            public var rawValue: String {
                switch self {
                case .appClipDefaultExperiences: return "appClipDefaultExperiences"
                case .unknown(let rawValue): return rawValue
                }
            }

            public init(rawValue: String) {
                switch rawValue {
                case "appClipDefaultExperiences": self = .appClipDefaultExperiences
                default: self = .unknown(rawValue)
                }
            }
        }

        public struct Attributes: Hashable, Codable {
            public var action: AppClipAction?

            public init(action: AppClipAction? = nil) {
                self.action = action
            }

            private enum CodingKeys: String, CodingKey {
                case action
            }
        }

        public struct Relationships: Hashable, Codable {
            public var appClip: AppClip

            public var appClipDefaultExperienceTemplate: AppClipDefaultExperienceTemplate?

            public var releaseWithAppStoreVersion: ReleaseWithAppStoreVersion?

            public init(
                appClip: AppClip,
                appClipDefaultExperienceTemplate: AppClipDefaultExperienceTemplate? = nil,
                releaseWithAppStoreVersion: ReleaseWithAppStoreVersion? = nil
            ) {
                self.appClip = appClip
                self.appClipDefaultExperienceTemplate = appClipDefaultExperienceTemplate
                self.releaseWithAppStoreVersion = releaseWithAppStoreVersion
            }

            private enum CodingKeys: String, CodingKey {
                case appClip
                case appClipDefaultExperienceTemplate
                case releaseWithAppStoreVersion
            }

            public struct AppClip: Hashable, Codable {
                public var data: Data

                public init(data: Data) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: Hashable, Codable, RawRepresentable {
                        case appClips
                        case unknown(String)

                        public var rawValue: String {
                            switch self {
                            case .appClips: return "appClips"
                            case .unknown(let rawValue): return rawValue
                            }
                        }

                        public init(rawValue: String) {
                            switch rawValue {
                            case "appClips": self = .appClips
                            default: self = .unknown(rawValue)
                            }
                        }
                    }
                }
            }

            public struct AppClipDefaultExperienceTemplate: Hashable, Codable {
                public var data: Data?

                public init(data: Data? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: Hashable, Codable, RawRepresentable {
                        case appClipDefaultExperiences
                        case unknown(String)

                        public var rawValue: String {
                            switch self {
                            case .appClipDefaultExperiences: return "appClipDefaultExperiences"
                            case .unknown(let rawValue): return rawValue
                            }
                        }

                        public init(rawValue: String) {
                            switch rawValue {
                            case "appClipDefaultExperiences": self = .appClipDefaultExperiences
                            default: self = .unknown(rawValue)
                            }
                        }
                    }
                }
            }

            public struct ReleaseWithAppStoreVersion: Hashable, Codable {
                public var data: Data?

                public init(data: Data? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: Hashable, Codable, RawRepresentable {
                        case appStoreVersions
                        case unknown(String)

                        public var rawValue: String {
                            switch self {
                            case .appStoreVersions: return "appStoreVersions"
                            case .unknown(let rawValue): return rawValue
                            }
                        }

                        public init(rawValue: String) {
                            switch rawValue {
                            case "appStoreVersions": self = .appStoreVersions
                            default: self = .unknown(rawValue)
                            }
                        }
                    }
                }
            }
        }
    }
}

// swiftlint:enable all
