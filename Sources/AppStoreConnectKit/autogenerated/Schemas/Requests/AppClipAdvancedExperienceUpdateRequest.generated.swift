// autogenerated

// swiftlint:disable all
import Foundation

public struct AppClipAdvancedExperienceUpdateRequest: Hashable, Codable {
    public var data: Data

    public var included: [AppClipAdvancedExperienceLocalizationInlineCreate]?

    public init(
        data: Data,
        included: [AppClipAdvancedExperienceLocalizationInlineCreate]? = nil
    ) {
        self.data = data
        self.included = included
    }

    private enum CodingKeys: String, CodingKey {
        case data
        case included
    }

    public struct Data: Hashable, Codable {
        public var id: String

        public var type: `Type`

        public var attributes: Attributes?

        public var relationships: Relationships?

        public init(
            id: String,
            type: `Type`,
            attributes: Attributes? = nil,
            relationships: Relationships? = nil
        ) {
            self.id = id
            self.type = type
            self.attributes = attributes
            self.relationships = relationships
        }

        private enum CodingKeys: String, CodingKey {
            case id
            case type
            case attributes
            case relationships
        }

        public enum `Type`: String, Hashable, Codable {
            case appClipAdvancedExperiences
        }

        public struct Attributes: Hashable, Codable {
            public var action: AppClipAction?

            public var businessCategory: BusinessCategory?

            public var defaultLanguage: AppClipAdvancedExperienceLanguage?

            public var isPoweredBy: Bool?

            public var place: Place?

            public var removed: Bool?

            public init(
                action: AppClipAction? = nil,
                businessCategory: BusinessCategory? = nil,
                defaultLanguage: AppClipAdvancedExperienceLanguage? = nil,
                isPoweredBy: Bool? = nil,
                place: Place? = nil,
                removed: Bool? = nil
            ) {
                self.action = action
                self.businessCategory = businessCategory
                self.defaultLanguage = defaultLanguage
                self.isPoweredBy = isPoweredBy
                self.place = place
                self.removed = removed
            }

            private enum CodingKeys: String, CodingKey {
                case action
                case businessCategory
                case defaultLanguage
                case isPoweredBy
                case place
                case removed
            }

            public enum BusinessCategory: String, Hashable, Codable {
                case automotive = "AUTOMOTIVE"
                case beauty = "BEAUTY"
                case bikes = "BIKES"
                case books = "BOOKS"
                case casino = "CASINO"
                case education = "EDUCATION"
                case educationJapan = "EDUCATION_JAPAN"
                case entertainment = "ENTERTAINMENT"
                case evCharger = "EV_CHARGER"
                case financialCny = "FINANCIAL_CNY"
                case financialEur = "FINANCIAL_EUR"
                case financialGbp = "FINANCIAL_GBP"
                case financialJpy = "FINANCIAL_JPY"
                case financialUsd = "FINANCIAL_USD"
                case fitness = "FITNESS"
                case foodAndDrink = "FOOD_AND_DRINK"
                case gas = "GAS"
                case grocery = "GROCERY"
                case healthAndMedical = "HEALTH_AND_MEDICAL"
                case hotelAndTravel = "HOTEL_AND_TRAVEL"
                case music = "MUSIC"
                case parking = "PARKING"
                case petServices = "PET_SERVICES"
                case professionalServices = "PROFESSIONAL_SERVICES"
                case shopping = "SHOPPING"
                case ticketing = "TICKETING"
                case transit = "TRANSIT"
            }

            public struct Place: Hashable, Codable {
                public var categories: [String]?

                public var displayPoint: DisplayPoint?

                public var homePage: String?

                public var mainAddress: MainAddress?

                public var mapAction: MapAction?

                public var names: [String]?

                public var phoneNumber: PhoneNumber?

                public var placeId: String?

                public var relationship: Relationship?

                public init(
                    categories: [String]? = nil,
                    displayPoint: DisplayPoint? = nil,
                    homePage: String? = nil,
                    mainAddress: MainAddress? = nil,
                    mapAction: MapAction? = nil,
                    names: [String]? = nil,
                    phoneNumber: PhoneNumber? = nil,
                    placeId: String? = nil,
                    relationship: Relationship? = nil
                ) {
                    self.categories = categories
                    self.displayPoint = displayPoint
                    self.homePage = homePage
                    self.mainAddress = mainAddress
                    self.mapAction = mapAction
                    self.names = names
                    self.phoneNumber = phoneNumber
                    self.placeId = placeId
                    self.relationship = relationship
                }

                private enum CodingKeys: String, CodingKey {
                    case categories
                    case displayPoint
                    case homePage
                    case mainAddress
                    case mapAction
                    case names
                    case phoneNumber
                    case placeId
                    case relationship
                }

                public struct DisplayPoint: Hashable, Codable {
                    public var coordinates: Coordinates?

                    public var source: Source?

                    public init(
                        coordinates: Coordinates? = nil,
                        source: Source? = nil
                    ) {
                        self.coordinates = coordinates
                        self.source = source
                    }

                    private enum CodingKeys: String, CodingKey {
                        case coordinates
                        case source
                    }

                    public struct Coordinates: Hashable, Codable {
                        public var latitude: Float?

                        public var longitude: Float?

                        public init(
                            latitude: Float? = nil,
                            longitude: Float? = nil
                        ) {
                            self.latitude = latitude
                            self.longitude = longitude
                        }

                        private enum CodingKeys: String, CodingKey {
                            case latitude
                            case longitude
                        }
                    }

                    public enum Source: String, Hashable, Codable {
                        case calculated = "CALCULATED"
                        case manuallyPlaced = "MANUALLY_PLACED"
                    }
                }

                public struct MainAddress: Hashable, Codable {
                    public var fullAddress: String?

                    public var structuredAddress: StructuredAddress?

                    public init(
                        fullAddress: String? = nil,
                        structuredAddress: StructuredAddress? = nil
                    ) {
                        self.fullAddress = fullAddress
                        self.structuredAddress = structuredAddress
                    }

                    private enum CodingKeys: String, CodingKey {
                        case fullAddress
                        case structuredAddress
                    }

                    public struct StructuredAddress: Hashable, Codable {
                        public var countryCode: String?

                        public var floor: String?

                        public var locality: String?

                        public var neighborhood: String?

                        public var postalCode: String?

                        public var stateProvince: String?

                        public var streetAddress: [String]?

                        public init(
                            countryCode: String? = nil,
                            floor: String? = nil,
                            locality: String? = nil,
                            neighborhood: String? = nil,
                            postalCode: String? = nil,
                            stateProvince: String? = nil,
                            streetAddress: [String]? = nil
                        ) {
                            self.countryCode = countryCode
                            self.floor = floor
                            self.locality = locality
                            self.neighborhood = neighborhood
                            self.postalCode = postalCode
                            self.stateProvince = stateProvince
                            self.streetAddress = streetAddress
                        }

                        private enum CodingKeys: String, CodingKey {
                            case countryCode
                            case floor
                            case locality
                            case neighborhood
                            case postalCode
                            case stateProvince
                            case streetAddress
                        }
                    }
                }

                public enum MapAction: String, Hashable, Codable {
                    case buyTickets = "BUY_TICKETS"
                    case hotelBookRoom = "HOTEL_BOOK_ROOM"
                    case parkingReserveParking = "PARKING_RESERVE_PARKING"
                    case restaurantJoinWaitlist = "RESTAURANT_JOIN_WAITLIST"
                    case restaurantOrderDelivery = "RESTAURANT_ORDER_DELIVERY"
                    case restaurantOrderFood = "RESTAURANT_ORDER_FOOD"
                    case restaurantOrderTakeout = "RESTAURANT_ORDER_TAKEOUT"
                    case restaurantReservation = "RESTAURANT_RESERVATION"
                    case restaurantViewMenu = "RESTAURANT_VIEW_MENU"
                    case scheduleAppointment = "SCHEDULE_APPOINTMENT"
                    case theaterNowPlaying = "THEATER_NOW_PLAYING"
                    case viewAvailability = "VIEW_AVAILABILITY"
                    case viewPricing = "VIEW_PRICING"
                }

                public struct PhoneNumber: Hashable, Codable {
                    public var type: `Type`?

                    public var intent: String?

                    public var number: String?

                    public init(
                        type: `Type`? = nil,
                        intent: String? = nil,
                        number: String? = nil
                    ) {
                        self.type = type
                        self.intent = intent
                        self.number = number
                    }

                    private enum CodingKeys: String, CodingKey {
                        case type
                        case intent
                        case number
                    }

                    public enum `Type`: String, Hashable, Codable {
                        case fax = "FAX"
                        case landline = "LANDLINE"
                        case mobile = "MOBILE"
                        case tollfree = "TOLLFREE"
                    }
                }

                public enum Relationship: String, Hashable, Codable {
                    case authorized = "AUTHORIZED"
                    case other = "OTHER"
                    case owner = "OWNER"
                }
            }
        }

        public struct Relationships: Hashable, Codable {
            public var appClip: AppClip?

            public var headerImage: HeaderImage?

            public var localizations: Localizations?

            public init(
                appClip: AppClip? = nil,
                headerImage: HeaderImage? = nil,
                localizations: Localizations? = nil
            ) {
                self.appClip = appClip
                self.headerImage = headerImage
                self.localizations = localizations
            }

            private enum CodingKeys: String, CodingKey {
                case appClip
                case headerImage
                case localizations
            }

            public struct AppClip: Hashable, Codable {
                public var data: Data?

                public init(data: Data? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable {
                        case appClips
                    }
                }
            }

            public struct HeaderImage: Hashable, Codable {
                public var data: Data?

                public init(data: Data? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable {
                        case appClipAdvancedExperienceImages
                    }
                }
            }

            public struct Localizations: Hashable, Codable {
                public var data: [Data]?

                public init(data: [Data]? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable {
                        case appClipAdvancedExperienceLocalizations
                    }
                }
            }
        }
    }
}

// swiftlint:enable all
