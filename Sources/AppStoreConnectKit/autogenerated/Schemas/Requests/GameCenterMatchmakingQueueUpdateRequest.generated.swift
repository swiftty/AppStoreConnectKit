// autogenerated

// swiftlint:disable all
import Foundation

public struct GameCenterMatchmakingQueueUpdateRequest: Hashable, Codable, Sendable {
    public var data: Data

    public init(data: Data) {
        self.data = data
    }

    private enum CodingKeys: String, CodingKey {
        case data
    }

    public struct Data: Hashable, Codable, Sendable {
        public var id: String

        public var type: `Type`

        public var attributes: Attributes?

        public var relationships: Relationships?

        public init(
            id: String,
            type: `Type`,
            attributes: Attributes? = nil,
            relationships: Relationships? = nil
        ) {
            self.id = id
            self.type = type
            self.attributes = attributes
            self.relationships = relationships
        }

        private enum CodingKeys: String, CodingKey {
            case id
            case type
            case attributes
            case relationships
        }

        public enum `Type`: String, Hashable, Codable, Sendable {
            case gameCenterMatchmakingQueues
        }

        public struct Attributes: Hashable, Codable, Sendable {
            public var classicMatchmakingBundleIds: [String]?

            public init(classicMatchmakingBundleIds: [String]? = nil) {
                self.classicMatchmakingBundleIds = classicMatchmakingBundleIds
            }

            private enum CodingKeys: String, CodingKey {
                case classicMatchmakingBundleIds
            }
        }

        public struct Relationships: Hashable, Codable, Sendable {
            public var experimentRuleSet: ExperimentRuleSet?

            public var ruleSet: RuleSet?

            public init(
                experimentRuleSet: ExperimentRuleSet? = nil,
                ruleSet: RuleSet? = nil
            ) {
                self.experimentRuleSet = experimentRuleSet
                self.ruleSet = ruleSet
            }

            private enum CodingKeys: String, CodingKey {
                case experimentRuleSet
                case ruleSet
            }

            public struct ExperimentRuleSet: Hashable, Codable, Sendable {
                public var data: Data?

                public init(data: Data? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case gameCenterMatchmakingRuleSets
                    }
                }
            }

            public struct RuleSet: Hashable, Codable, Sendable {
                public var data: Data?

                public init(data: Data? = nil) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case gameCenterMatchmakingRuleSets
                    }
                }
            }
        }
    }
}

// swiftlint:enable all
