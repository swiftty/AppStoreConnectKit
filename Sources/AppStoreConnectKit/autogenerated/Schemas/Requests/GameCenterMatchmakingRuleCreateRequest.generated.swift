// autogenerated

// swiftlint:disable all
import Foundation

public struct GameCenterMatchmakingRuleCreateRequest: Hashable, Codable, Sendable {
    public var data: Data

    public init(data: Data) {
        self.data = data
    }

    private enum CodingKeys: String, CodingKey {
        case data
    }

    public struct Data: Hashable, Codable, Sendable {
        public var type: `Type`

        public var attributes: Attributes

        public var relationships: Relationships

        public init(
            type: `Type`,
            attributes: Attributes,
            relationships: Relationships
        ) {
            self.type = type
            self.attributes = attributes
            self.relationships = relationships
        }

        private enum CodingKeys: String, CodingKey {
            case type
            case attributes
            case relationships
        }

        public enum `Type`: String, Hashable, Codable, Sendable {
            case gameCenterMatchmakingRules
        }

        public struct Attributes: Hashable, Codable, Sendable {
            public var type: `Type`

            public var description: String

            public var expression: String

            public var referenceName: String

            public var weight: Float?

            public init(
                type: `Type`,
                description: String,
                expression: String,
                referenceName: String,
                weight: Float? = nil
            ) {
                self.type = type
                self.description = description
                self.expression = expression
                self.referenceName = referenceName
                self.weight = weight
            }

            private enum CodingKeys: String, CodingKey {
                case type
                case description
                case expression
                case referenceName
                case weight
            }

            public struct `Type`: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
                public static var compatible: Self {
                    .init(rawValue: "COMPATIBLE")
                }

                public static var distance: Self {
                    .init(rawValue: "DISTANCE")
                }

                public static var match: Self {
                    .init(rawValue: "MATCH")
                }

                public static var team: Self {
                    .init(rawValue: "TEAM")
                }

                public var description: String {
                    rawValue
                }

                public var rawValue: String

                public init(rawValue: String) {
                    self.rawValue = rawValue
                }
            }
        }

        public struct Relationships: Hashable, Codable, Sendable {
            public var ruleSet: RuleSet

            public init(ruleSet: RuleSet) {
                self.ruleSet = ruleSet
            }

            private enum CodingKeys: String, CodingKey {
                case ruleSet
            }

            public struct RuleSet: Hashable, Codable, Sendable {
                public var data: Data

                public init(data: Data) {
                    self.data = data
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                }

                public struct Data: Hashable, Codable, Sendable {
                    public var id: String

                    public var type: `Type`

                    public init(
                        id: String,
                        type: `Type`
                    ) {
                        self.id = id
                        self.type = type
                    }

                    private enum CodingKeys: String, CodingKey {
                        case id
                        case type
                    }

                    public enum `Type`: String, Hashable, Codable, Sendable {
                        case gameCenterMatchmakingRuleSets
                    }
                }
            }
        }
    }
}

// swiftlint:enable all
