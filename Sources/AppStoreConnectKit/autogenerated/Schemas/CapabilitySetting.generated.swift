// autogenerated

// swiftlint:disable all
import Foundation

public struct CapabilitySetting: Hashable, Codable {
    public var allowedInstances: AllowedInstances?

    public var description: String?

    public var enabledByDefault: Bool?

    public var key: Key?

    public var minInstances: Int?

    public var name: String?

    public var options: [CapabilityOption]?

    public var visible: Bool?

    public init(
        allowedInstances: AllowedInstances? = nil,
        description: String? = nil,
        enabledByDefault: Bool? = nil,
        key: Key? = nil,
        minInstances: Int? = nil,
        name: String? = nil,
        options: [CapabilityOption]? = nil,
        visible: Bool? = nil
    ) {
        self.allowedInstances = allowedInstances
        self.description = description
        self.enabledByDefault = enabledByDefault
        self.key = key
        self.minInstances = minInstances
        self.name = name
        self.options = options
        self.visible = visible
    }

    private enum CodingKeys: String, CodingKey {
        case allowedInstances
        case description
        case enabledByDefault
        case key
        case minInstances
        case name
        case options
        case visible
    }

    public enum AllowedInstances: Hashable, Codable, RawRepresentable {
        case entry
        case multiple
        case single
        case unknown(String)

        public var rawValue: String {
            switch self {
            case .entry: return "ENTRY"
            case .multiple: return "MULTIPLE"
            case .single: return "SINGLE"
            case .unknown(let rawValue): return rawValue
            }
        }

        public init(rawValue: String) {
            switch rawValue {
            case "ENTRY": self = .entry
            case "MULTIPLE": self = .multiple
            case "SINGLE": self = .single
            default: self = .unknown(rawValue)
            }
        }
    }

    public enum Key: Hashable, Codable, RawRepresentable {
        case appleIdAuthAppConsent
        case dataProtectionPermissionLevel
        case icloudVersion
        case unknown(String)

        public var rawValue: String {
            switch self {
            case .appleIdAuthAppConsent: return "APPLE_ID_AUTH_APP_CONSENT"
            case .dataProtectionPermissionLevel: return "DATA_PROTECTION_PERMISSION_LEVEL"
            case .icloudVersion: return "ICLOUD_VERSION"
            case .unknown(let rawValue): return rawValue
            }
        }

        public init(rawValue: String) {
            switch rawValue {
            case "APPLE_ID_AUTH_APP_CONSENT": self = .appleIdAuthAppConsent
            case "DATA_PROTECTION_PERMISSION_LEVEL": self = .dataProtectionPermissionLevel
            case "ICLOUD_VERSION": self = .icloudVersion
            default: self = .unknown(rawValue)
            }
        }
    }
}

// swiftlint:enable all
