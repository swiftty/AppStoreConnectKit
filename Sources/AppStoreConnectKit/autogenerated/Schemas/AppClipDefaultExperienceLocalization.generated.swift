// autogenerated

// swiftlint:disable all
import Foundation

public struct AppClipDefaultExperienceLocalization: Hashable, Codable {
    public var id: String

    public var type: `Type`

    public var attributes: Attributes?

    public var relationships: Relationships?

    public var links: ResourceLinks

    public init(
        id: String,
        type: `Type`,
        attributes: Attributes? = nil,
        relationships: Relationships? = nil,
        links: ResourceLinks
    ) {
        self.id = id
        self.type = type
        self.attributes = attributes
        self.relationships = relationships
        self.links = links
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case type
        case attributes
        case relationships
        case links
    }

    public enum `Type`: Hashable, Codable, RawRepresentable {
        case appClipDefaultExperienceLocalizations
        case unknown(String)

        public var rawValue: String {
            switch self {
            case .appClipDefaultExperienceLocalizations: return "appClipDefaultExperienceLocalizations"
            case .unknown(let rawValue): return rawValue
            }
        }

        public init(rawValue: String) {
            switch rawValue {
            case "appClipDefaultExperienceLocalizations": self = .appClipDefaultExperienceLocalizations
            default: self = .unknown(rawValue)
            }
        }
    }

    public struct Attributes: Hashable, Codable {
        public var locale: String?

        public var subtitle: String?

        public init(
            locale: String? = nil,
            subtitle: String? = nil
        ) {
            self.locale = locale
            self.subtitle = subtitle
        }

        private enum CodingKeys: String, CodingKey {
            case locale
            case subtitle
        }
    }

    public struct Relationships: Hashable, Codable {
        public var appClipDefaultExperience: AppClipDefaultExperience?

        public var appClipHeaderImage: AppClipHeaderImage?

        public init(
            appClipDefaultExperience: AppClipDefaultExperience? = nil,
            appClipHeaderImage: AppClipHeaderImage? = nil
        ) {
            self.appClipDefaultExperience = appClipDefaultExperience
            self.appClipHeaderImage = appClipHeaderImage
        }

        private enum CodingKeys: String, CodingKey {
            case appClipDefaultExperience
            case appClipHeaderImage
        }

        public struct AppClipDefaultExperience: Hashable, Codable {
            public var data: Data?

            public var links: Links?

            public init(
                data: Data? = nil,
                links: Links? = nil
            ) {
                self.data = data
                self.links = links
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
            }

            public struct Data: Hashable, Codable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: Hashable, Codable, RawRepresentable {
                    case appClipDefaultExperiences
                    case unknown(String)

                    public var rawValue: String {
                        switch self {
                        case .appClipDefaultExperiences: return "appClipDefaultExperiences"
                        case .unknown(let rawValue): return rawValue
                        }
                    }

                    public init(rawValue: String) {
                        switch rawValue {
                        case "appClipDefaultExperiences": self = .appClipDefaultExperiences
                        default: self = .unknown(rawValue)
                        }
                    }
                }
            }

            public struct Links: Hashable, Codable {
                public var related: URL?

                public var `self`: URL?

                public init(
                    related: URL? = nil,
                    self _self: URL? = nil
                ) {
                    self.related = related
                    self.`self` = _self
                }

                private enum CodingKeys: String, CodingKey {
                    case related
                    case `self` = "self"
                }
            }
        }

        public struct AppClipHeaderImage: Hashable, Codable {
            public var data: Data?

            public var links: Links?

            public init(
                data: Data? = nil,
                links: Links? = nil
            ) {
                self.data = data
                self.links = links
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
            }

            public struct Data: Hashable, Codable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: Hashable, Codable, RawRepresentable {
                    case appClipHeaderImages
                    case unknown(String)

                    public var rawValue: String {
                        switch self {
                        case .appClipHeaderImages: return "appClipHeaderImages"
                        case .unknown(let rawValue): return rawValue
                        }
                    }

                    public init(rawValue: String) {
                        switch rawValue {
                        case "appClipHeaderImages": self = .appClipHeaderImages
                        default: self = .unknown(rawValue)
                        }
                    }
                }
            }

            public struct Links: Hashable, Codable {
                public var related: URL?

                public var `self`: URL?

                public init(
                    related: URL? = nil,
                    self _self: URL? = nil
                ) {
                    self.related = related
                    self.`self` = _self
                }

                private enum CodingKeys: String, CodingKey {
                    case related
                    case `self` = "self"
                }
            }
        }
    }
}

// swiftlint:enable all
