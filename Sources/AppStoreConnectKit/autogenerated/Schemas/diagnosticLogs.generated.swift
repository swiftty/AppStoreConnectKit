// autogenerated

// swiftlint:disable all
import Foundation

public struct DiagnosticLogs: Hashable, Codable, Sendable {
    public var productData: [ProductData]?

    public var version: String?

    public init(
        productData: [ProductData]? = nil,
        version: String? = nil
    ) {
        self.productData = productData
        self.version = version
    }

    private enum CodingKeys: String, CodingKey {
        case productData
        case version
    }

    public struct ProductData: Hashable, Codable, Sendable {
        public var diagnosticInsights: [DiagnosticInsights]?

        public var diagnosticLogs: [DiagnosticLogs]?

        public var signatureId: String?

        public init(
            diagnosticInsights: [DiagnosticInsights]? = nil,
            diagnosticLogs: [DiagnosticLogs]? = nil,
            signatureId: String? = nil
        ) {
            self.diagnosticInsights = diagnosticInsights
            self.diagnosticLogs = diagnosticLogs
            self.signatureId = signatureId
        }

        private enum CodingKeys: String, CodingKey {
            case diagnosticInsights
            case diagnosticLogs
            case signatureId
        }

        public struct DiagnosticInsights: Hashable, Codable, Sendable {
            public var insightsCategory: String?

            public var insightsString: String?

            public var insightsURL: String?

            public init(
                insightsCategory: String? = nil,
                insightsString: String? = nil,
                insightsURL: String? = nil
            ) {
                self.insightsCategory = insightsCategory
                self.insightsString = insightsString
                self.insightsURL = insightsURL
            }

            private enum CodingKeys: String, CodingKey {
                case insightsCategory
                case insightsString
                case insightsURL
            }
        }

        public struct DiagnosticLogs: Hashable, Codable, Sendable {
            public var callStackTree: [CallStackTree]?

            public var diagnosticMetaData: DiagnosticMetaData?

            public init(
                callStackTree: [CallStackTree]? = nil,
                diagnosticMetaData: DiagnosticMetaData? = nil
            ) {
                self.callStackTree = callStackTree
                self.diagnosticMetaData = diagnosticMetaData
            }

            private enum CodingKeys: String, CodingKey {
                case callStackTree
                case diagnosticMetaData
            }

            public struct CallStackTree: Hashable, Codable, Sendable {
                public var callStackPerThread: Bool?

                public var callStacks: [CallStacks]?

                public init(
                    callStackPerThread: Bool? = nil,
                    callStacks: [CallStacks]? = nil
                ) {
                    self.callStackPerThread = callStackPerThread
                    self.callStacks = callStacks
                }

                private enum CodingKeys: String, CodingKey {
                    case callStackPerThread
                    case callStacks
                }

                public struct CallStacks: Hashable, Codable, Sendable {
                    public var callStackRootFrames: [DiagnosticLogCallStackNode]?

                    public init(callStackRootFrames: [DiagnosticLogCallStackNode]? = nil) {
                        self.callStackRootFrames = callStackRootFrames
                    }

                    private enum CodingKeys: String, CodingKey {
                        case callStackRootFrames
                    }
                }
            }

            public struct DiagnosticMetaData: Hashable, Codable, Sendable {
                public var appVersion: String?

                public var buildVersion: String?

                public var bundleId: String?

                public var deviceType: String?

                public var event: String?

                public var eventDetail: String?

                public var osVersion: String?

                public var platformArchitecture: String?

                public var writesCaused: String?

                public init(
                    appVersion: String? = nil,
                    buildVersion: String? = nil,
                    bundleId: String? = nil,
                    deviceType: String? = nil,
                    event: String? = nil,
                    eventDetail: String? = nil,
                    osVersion: String? = nil,
                    platformArchitecture: String? = nil,
                    writesCaused: String? = nil
                ) {
                    self.appVersion = appVersion
                    self.buildVersion = buildVersion
                    self.bundleId = bundleId
                    self.deviceType = deviceType
                    self.event = event
                    self.eventDetail = eventDetail
                    self.osVersion = osVersion
                    self.platformArchitecture = platformArchitecture
                    self.writesCaused = writesCaused
                }

                private enum CodingKeys: String, CodingKey {
                    case appVersion
                    case buildVersion
                    case bundleId
                    case deviceType
                    case event
                    case eventDetail
                    case osVersion
                    case platformArchitecture
                    case writesCaused
                }
            }
        }
    }
}

// swiftlint:enable all
