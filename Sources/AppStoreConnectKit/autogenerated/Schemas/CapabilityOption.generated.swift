// autogenerated

// swiftlint:disable all
import Foundation

public struct CapabilityOption: Hashable, Codable {
    public var description: String?

    public var enabled: Bool?

    public var enabledByDefault: Bool?

    public var key: Key?

    public var name: String?

    public var supportsWildcard: Bool?

    public init(
        description: String? = nil,
        enabled: Bool? = nil,
        enabledByDefault: Bool? = nil,
        key: Key? = nil,
        name: String? = nil,
        supportsWildcard: Bool? = nil
    ) {
        self.description = description
        self.enabled = enabled
        self.enabledByDefault = enabledByDefault
        self.key = key
        self.name = name
        self.supportsWildcard = supportsWildcard
    }

    private enum CodingKeys: String, CodingKey {
        case description
        case enabled
        case enabledByDefault
        case key
        case name
        case supportsWildcard
    }

    public enum Key: String, Hashable, Codable {
        case completeProtection = "COMPLETE_PROTECTION"
        case primaryAppConsent = "PRIMARY_APP_CONSENT"
        case protectedUnlessOpen = "PROTECTED_UNLESS_OPEN"
        case protectedUntilFirstUserAuth = "PROTECTED_UNTIL_FIRST_USER_AUTH"
        case xcode5 = "XCODE_5"
        case xcode6 = "XCODE_6"
    }
}

// swiftlint:enable all
