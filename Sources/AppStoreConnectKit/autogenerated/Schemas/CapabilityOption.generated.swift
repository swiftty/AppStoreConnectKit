// autogenerated

// swiftlint:disable all
import Foundation

public struct CapabilityOption: Hashable, Codable, Sendable {
    public var description: String?

    public var enabled: Bool?

    public var enabledByDefault: Bool?

    public var key: Key?

    public var name: String?

    public var supportsWildcard: Bool?

    public init(
        description: String? = nil,
        enabled: Bool? = nil,
        enabledByDefault: Bool? = nil,
        key: Key? = nil,
        name: String? = nil,
        supportsWildcard: Bool? = nil
    ) {
        self.description = description
        self.enabled = enabled
        self.enabledByDefault = enabledByDefault
        self.key = key
        self.name = name
        self.supportsWildcard = supportsWildcard
    }

    private enum CodingKeys: String, CodingKey {
        case description
        case enabled
        case enabledByDefault
        case key
        case name
        case supportsWildcard
    }

    public struct Key: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
        public static var completeProtection: Self {
            .init(rawValue: "COMPLETE_PROTECTION")
        }

        public static var primaryAppConsent: Self {
            .init(rawValue: "PRIMARY_APP_CONSENT")
        }

        public static var protectedUnlessOpen: Self {
            .init(rawValue: "PROTECTED_UNLESS_OPEN")
        }

        public static var protectedUntilFirstUserAuth: Self {
            .init(rawValue: "PROTECTED_UNTIL_FIRST_USER_AUTH")
        }

        public static var xcode5: Self {
            .init(rawValue: "XCODE_5")
        }

        public static var xcode6: Self {
            .init(rawValue: "XCODE_6")
        }

        public var description: String {
            rawValue
        }

        public var rawValue: String

        public init(rawValue: String) {
            self.rawValue = rawValue
        }
    }
}

// swiftlint:enable all
