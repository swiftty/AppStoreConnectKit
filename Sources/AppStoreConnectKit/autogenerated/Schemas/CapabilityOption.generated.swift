// autogenerated

// swiftlint:disable all
import Foundation

public struct CapabilityOption: Hashable, Codable {
    public var description: String?

    public var enabled: Bool?

    public var enabledByDefault: Bool?

    public var key: Key?

    public var name: String?

    public var supportsWildcard: Bool?

    public init(
        description: String? = nil,
        enabled: Bool? = nil,
        enabledByDefault: Bool? = nil,
        key: Key? = nil,
        name: String? = nil,
        supportsWildcard: Bool? = nil
    ) {
        self.description = description
        self.enabled = enabled
        self.enabledByDefault = enabledByDefault
        self.key = key
        self.name = name
        self.supportsWildcard = supportsWildcard
    }

    private enum CodingKeys: String, CodingKey {
        case description
        case enabled
        case enabledByDefault
        case key
        case name
        case supportsWildcard
    }

    public enum Key: Hashable, Codable, RawRepresentable {
        case completeProtection
        case primaryAppConsent
        case protectedUnlessOpen
        case protectedUntilFirstUserAuth
        case xcode5
        case xcode6
        case unknown(String)

        public var rawValue: String {
            switch self {
            case .completeProtection: return "COMPLETE_PROTECTION"
            case .primaryAppConsent: return "PRIMARY_APP_CONSENT"
            case .protectedUnlessOpen: return "PROTECTED_UNLESS_OPEN"
            case .protectedUntilFirstUserAuth: return "PROTECTED_UNTIL_FIRST_USER_AUTH"
            case .xcode5: return "XCODE_5"
            case .xcode6: return "XCODE_6"
            case .unknown(let rawValue): return rawValue
            }
        }

        public init(rawValue: String) {
            switch rawValue {
            case "COMPLETE_PROTECTION": self = .completeProtection
            case "PRIMARY_APP_CONSENT": self = .primaryAppConsent
            case "PROTECTED_UNLESS_OPEN": self = .protectedUnlessOpen
            case "PROTECTED_UNTIL_FIRST_USER_AUTH": self = .protectedUntilFirstUserAuth
            case "XCODE_5": self = .xcode5
            case "XCODE_6": self = .xcode6
            default: self = .unknown(rawValue)
            }
        }
    }
}

// swiftlint:enable all
