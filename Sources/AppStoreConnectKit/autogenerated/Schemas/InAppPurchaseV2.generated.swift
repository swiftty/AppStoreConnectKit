// autogenerated

// swiftlint:disable all
import Foundation

public struct InAppPurchaseV2: Hashable, Codable, Sendable {
    public var id: String

    public var type: `Type`

    public var attributes: Attributes?

    public var relationships: Relationships?

    public var links: ResourceLinks?

    public init(
        id: String,
        type: `Type`,
        attributes: Attributes? = nil,
        relationships: Relationships? = nil,
        links: ResourceLinks? = nil
    ) {
        self.id = id
        self.type = type
        self.attributes = attributes
        self.relationships = relationships
        self.links = links
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case type
        case attributes
        case relationships
        case links
    }

    public enum `Type`: String, Hashable, Codable, Sendable {
        case inAppPurchases
    }

    public struct Attributes: Hashable, Codable, Sendable {
        public var contentHosting: Bool?

        public var familySharable: Bool?

        public var inAppPurchaseType: InAppPurchaseType?

        public var name: String?

        public var productId: String?

        public var reviewNote: String?

        public var state: InAppPurchaseState?

        public init(
            contentHosting: Bool? = nil,
            familySharable: Bool? = nil,
            inAppPurchaseType: InAppPurchaseType? = nil,
            name: String? = nil,
            productId: String? = nil,
            reviewNote: String? = nil,
            state: InAppPurchaseState? = nil
        ) {
            self.contentHosting = contentHosting
            self.familySharable = familySharable
            self.inAppPurchaseType = inAppPurchaseType
            self.name = name
            self.productId = productId
            self.reviewNote = reviewNote
            self.state = state
        }

        private enum CodingKeys: String, CodingKey {
            case contentHosting
            case familySharable
            case inAppPurchaseType
            case name
            case productId
            case reviewNote
            case state
        }
    }

    public struct Relationships: Hashable, Codable, Sendable {
        public var appStoreReviewScreenshot: AppStoreReviewScreenshot?

        public var content: Content?

        public var iapPriceSchedule: IapPriceSchedule?

        public var images: Images?

        public var inAppPurchaseAvailability: InAppPurchaseAvailability?

        public var inAppPurchaseLocalizations: InAppPurchaseLocalizations?

        public var pricePoints: PricePoints?

        public var promotedPurchase: PromotedPurchase?

        public init(
            appStoreReviewScreenshot: AppStoreReviewScreenshot? = nil,
            content: Content? = nil,
            iapPriceSchedule: IapPriceSchedule? = nil,
            images: Images? = nil,
            inAppPurchaseAvailability: InAppPurchaseAvailability? = nil,
            inAppPurchaseLocalizations: InAppPurchaseLocalizations? = nil,
            pricePoints: PricePoints? = nil,
            promotedPurchase: PromotedPurchase? = nil
        ) {
            self.appStoreReviewScreenshot = appStoreReviewScreenshot
            self.content = content
            self.iapPriceSchedule = iapPriceSchedule
            self.images = images
            self.inAppPurchaseAvailability = inAppPurchaseAvailability
            self.inAppPurchaseLocalizations = inAppPurchaseLocalizations
            self.pricePoints = pricePoints
            self.promotedPurchase = promotedPurchase
        }

        private enum CodingKeys: String, CodingKey {
            case appStoreReviewScreenshot
            case content
            case iapPriceSchedule
            case images
            case inAppPurchaseAvailability
            case inAppPurchaseLocalizations
            case pricePoints
            case promotedPurchase
        }

        public struct AppStoreReviewScreenshot: Hashable, Codable, Sendable {
            public var data: Data?

            public var links: RelationshipLinks?

            public init(
                data: Data? = nil,
                links: RelationshipLinks? = nil
            ) {
                self.data = data
                self.links = links
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case inAppPurchaseAppStoreReviewScreenshots
                }
            }
        }

        public struct Content: Hashable, Codable, Sendable {
            public var data: Data?

            public var links: RelationshipLinks?

            public init(
                data: Data? = nil,
                links: RelationshipLinks? = nil
            ) {
                self.data = data
                self.links = links
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case inAppPurchaseContents
                }
            }
        }

        public struct IapPriceSchedule: Hashable, Codable, Sendable {
            public var data: Data?

            public var links: RelationshipLinks?

            public init(
                data: Data? = nil,
                links: RelationshipLinks? = nil
            ) {
                self.data = data
                self.links = links
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case inAppPurchasePriceSchedules
                }
            }
        }

        public struct Images: Hashable, Codable, Sendable {
            public var data: [Data]?

            public var links: RelationshipLinks?

            public var meta: PagingInformation?

            public init(
                data: [Data]? = nil,
                links: RelationshipLinks? = nil,
                meta: PagingInformation? = nil
            ) {
                self.data = data
                self.links = links
                self.meta = meta
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
                case meta
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case inAppPurchaseImages
                }
            }
        }

        public struct InAppPurchaseAvailability: Hashable, Codable, Sendable {
            public var data: Data?

            public var links: RelationshipLinks?

            public init(
                data: Data? = nil,
                links: RelationshipLinks? = nil
            ) {
                self.data = data
                self.links = links
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case inAppPurchaseAvailabilities
                }
            }
        }

        public struct InAppPurchaseLocalizations: Hashable, Codable, Sendable {
            public var data: [Data]?

            public var links: RelationshipLinks?

            public var meta: PagingInformation?

            public init(
                data: [Data]? = nil,
                links: RelationshipLinks? = nil,
                meta: PagingInformation? = nil
            ) {
                self.data = data
                self.links = links
                self.meta = meta
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
                case meta
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case inAppPurchaseLocalizations
                }
            }
        }

        public struct PricePoints: Hashable, Codable, Sendable {
            public var data: [Data]?

            public var links: RelationshipLinks?

            public var meta: PagingInformation?

            public init(
                data: [Data]? = nil,
                links: RelationshipLinks? = nil,
                meta: PagingInformation? = nil
            ) {
                self.data = data
                self.links = links
                self.meta = meta
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
                case meta
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case inAppPurchasePricePoints
                }
            }
        }

        public struct PromotedPurchase: Hashable, Codable, Sendable {
            public var data: Data?

            public var links: RelationshipLinks?

            public init(
                data: Data? = nil,
                links: RelationshipLinks? = nil
            ) {
                self.data = data
                self.links = links
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case promotedPurchases
                }
            }
        }
    }
}

// swiftlint:enable all
