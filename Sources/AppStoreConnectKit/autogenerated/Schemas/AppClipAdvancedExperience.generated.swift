// autogenerated

// swiftlint:disable all
import Foundation

public struct AppClipAdvancedExperience: Hashable, Codable, Sendable {
    public var id: String

    public var type: `Type`

    public var attributes: Attributes?

    public var relationships: Relationships?

    public var links: ResourceLinks?

    public init(
        id: String,
        type: `Type`,
        attributes: Attributes? = nil,
        relationships: Relationships? = nil,
        links: ResourceLinks? = nil
    ) {
        self.id = id
        self.type = type
        self.attributes = attributes
        self.relationships = relationships
        self.links = links
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case type
        case attributes
        case relationships
        case links
    }

    public enum `Type`: String, Hashable, Codable, Sendable {
        case appClipAdvancedExperiences
    }

    public struct Attributes: Hashable, Codable, Sendable {
        public var action: AppClipAction?

        public var businessCategory: BusinessCategory?

        public var defaultLanguage: AppClipAdvancedExperienceLanguage?

        public var isPoweredBy: Bool?

        public var link: URL?

        public var place: Place?

        public var placeStatus: PlaceStatus?

        public var status: Status?

        public var version: Int?

        public init(
            action: AppClipAction? = nil,
            businessCategory: BusinessCategory? = nil,
            defaultLanguage: AppClipAdvancedExperienceLanguage? = nil,
            isPoweredBy: Bool? = nil,
            link: URL? = nil,
            place: Place? = nil,
            placeStatus: PlaceStatus? = nil,
            status: Status? = nil,
            version: Int? = nil
        ) {
            self.action = action
            self.businessCategory = businessCategory
            self.defaultLanguage = defaultLanguage
            self.isPoweredBy = isPoweredBy
            self.link = link
            self.place = place
            self.placeStatus = placeStatus
            self.status = status
            self.version = version
        }

        private enum CodingKeys: String, CodingKey {
            case action
            case businessCategory
            case defaultLanguage
            case isPoweredBy
            case link
            case place
            case placeStatus
            case status
            case version
        }

        public struct BusinessCategory: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var automotive: Self {
                .init(rawValue: "AUTOMOTIVE")
            }

            public static var beauty: Self {
                .init(rawValue: "BEAUTY")
            }

            public static var bikes: Self {
                .init(rawValue: "BIKES")
            }

            public static var books: Self {
                .init(rawValue: "BOOKS")
            }

            public static var casino: Self {
                .init(rawValue: "CASINO")
            }

            public static var education: Self {
                .init(rawValue: "EDUCATION")
            }

            public static var educationJapan: Self {
                .init(rawValue: "EDUCATION_JAPAN")
            }

            public static var entertainment: Self {
                .init(rawValue: "ENTERTAINMENT")
            }

            public static var evCharger: Self {
                .init(rawValue: "EV_CHARGER")
            }

            public static var financialCny: Self {
                .init(rawValue: "FINANCIAL_CNY")
            }

            public static var financialEur: Self {
                .init(rawValue: "FINANCIAL_EUR")
            }

            public static var financialGbp: Self {
                .init(rawValue: "FINANCIAL_GBP")
            }

            public static var financialJpy: Self {
                .init(rawValue: "FINANCIAL_JPY")
            }

            public static var financialUsd: Self {
                .init(rawValue: "FINANCIAL_USD")
            }

            public static var fitness: Self {
                .init(rawValue: "FITNESS")
            }

            public static var foodAndDrink: Self {
                .init(rawValue: "FOOD_AND_DRINK")
            }

            public static var gas: Self {
                .init(rawValue: "GAS")
            }

            public static var grocery: Self {
                .init(rawValue: "GROCERY")
            }

            public static var healthAndMedical: Self {
                .init(rawValue: "HEALTH_AND_MEDICAL")
            }

            public static var hotelAndTravel: Self {
                .init(rawValue: "HOTEL_AND_TRAVEL")
            }

            public static var music: Self {
                .init(rawValue: "MUSIC")
            }

            public static var parking: Self {
                .init(rawValue: "PARKING")
            }

            public static var petServices: Self {
                .init(rawValue: "PET_SERVICES")
            }

            public static var professionalServices: Self {
                .init(rawValue: "PROFESSIONAL_SERVICES")
            }

            public static var shopping: Self {
                .init(rawValue: "SHOPPING")
            }

            public static var ticketing: Self {
                .init(rawValue: "TICKETING")
            }

            public static var transit: Self {
                .init(rawValue: "TRANSIT")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }

        public struct Place: Hashable, Codable, Sendable {
            public var categories: [String]?

            public var displayPoint: DisplayPoint?

            public var homePage: String?

            public var mainAddress: MainAddress?

            public var mapAction: MapAction?

            public var names: [String]?

            public var phoneNumber: PhoneNumber?

            public var placeId: String?

            public var relationship: Relationship?

            public init(
                categories: [String]? = nil,
                displayPoint: DisplayPoint? = nil,
                homePage: String? = nil,
                mainAddress: MainAddress? = nil,
                mapAction: MapAction? = nil,
                names: [String]? = nil,
                phoneNumber: PhoneNumber? = nil,
                placeId: String? = nil,
                relationship: Relationship? = nil
            ) {
                self.categories = categories
                self.displayPoint = displayPoint
                self.homePage = homePage
                self.mainAddress = mainAddress
                self.mapAction = mapAction
                self.names = names
                self.phoneNumber = phoneNumber
                self.placeId = placeId
                self.relationship = relationship
            }

            private enum CodingKeys: String, CodingKey {
                case categories
                case displayPoint
                case homePage
                case mainAddress
                case mapAction
                case names
                case phoneNumber
                case placeId
                case relationship
            }

            public struct DisplayPoint: Hashable, Codable, Sendable {
                public var coordinates: Coordinates?

                public var source: Source?

                public init(
                    coordinates: Coordinates? = nil,
                    source: Source? = nil
                ) {
                    self.coordinates = coordinates
                    self.source = source
                }

                private enum CodingKeys: String, CodingKey {
                    case coordinates
                    case source
                }

                public struct Coordinates: Hashable, Codable, Sendable {
                    public var latitude: Float?

                    public var longitude: Float?

                    public init(
                        latitude: Float? = nil,
                        longitude: Float? = nil
                    ) {
                        self.latitude = latitude
                        self.longitude = longitude
                    }

                    private enum CodingKeys: String, CodingKey {
                        case latitude
                        case longitude
                    }
                }

                public struct Source: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
                    public static var calculated: Self {
                        .init(rawValue: "CALCULATED")
                    }

                    public static var manuallyPlaced: Self {
                        .init(rawValue: "MANUALLY_PLACED")
                    }

                    public var description: String {
                        rawValue
                    }

                    public var rawValue: String

                    public init(rawValue: String) {
                        self.rawValue = rawValue
                    }
                }
            }

            public struct MainAddress: Hashable, Codable, Sendable {
                public var fullAddress: String?

                public var structuredAddress: StructuredAddress?

                public init(
                    fullAddress: String? = nil,
                    structuredAddress: StructuredAddress? = nil
                ) {
                    self.fullAddress = fullAddress
                    self.structuredAddress = structuredAddress
                }

                private enum CodingKeys: String, CodingKey {
                    case fullAddress
                    case structuredAddress
                }

                public struct StructuredAddress: Hashable, Codable, Sendable {
                    public var countryCode: String?

                    public var floor: String?

                    public var locality: String?

                    public var neighborhood: String?

                    public var postalCode: String?

                    public var stateProvince: String?

                    public var streetAddress: [String]?

                    public init(
                        countryCode: String? = nil,
                        floor: String? = nil,
                        locality: String? = nil,
                        neighborhood: String? = nil,
                        postalCode: String? = nil,
                        stateProvince: String? = nil,
                        streetAddress: [String]? = nil
                    ) {
                        self.countryCode = countryCode
                        self.floor = floor
                        self.locality = locality
                        self.neighborhood = neighborhood
                        self.postalCode = postalCode
                        self.stateProvince = stateProvince
                        self.streetAddress = streetAddress
                    }

                    private enum CodingKeys: String, CodingKey {
                        case countryCode
                        case floor
                        case locality
                        case neighborhood
                        case postalCode
                        case stateProvince
                        case streetAddress
                    }
                }
            }

            public struct MapAction: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
                public static var airlineBookTravel: Self {
                    .init(rawValue: "AIRLINE_BOOK_TRAVEL")
                }

                public static var airlineCheckIn: Self {
                    .init(rawValue: "AIRLINE_CHECK_IN")
                }

                public static var airlineFlightStatus: Self {
                    .init(rawValue: "AIRLINE_FLIGHT_STATUS")
                }

                public static var apply: Self {
                    .init(rawValue: "APPLY")
                }

                public static var book: Self {
                    .init(rawValue: "BOOK")
                }

                public static var bookActivities: Self {
                    .init(rawValue: "BOOK_ACTIVITIES")
                }

                public static var bookRides: Self {
                    .init(rawValue: "BOOK_RIDES")
                }

                public static var bookTeetimes: Self {
                    .init(rawValue: "BOOK_TEETIMES")
                }

                public static var bookTours: Self {
                    .init(rawValue: "BOOK_TOURS")
                }

                public static var buyTickets: Self {
                    .init(rawValue: "BUY_TICKETS")
                }

                public static var careers: Self {
                    .init(rawValue: "CAREERS")
                }

                public static var chargeEv: Self {
                    .init(rawValue: "CHARGE_EV")
                }

                public static var coupons: Self {
                    .init(rawValue: "COUPONS")
                }

                public static var donate: Self {
                    .init(rawValue: "DONATE")
                }

                public static var events: Self {
                    .init(rawValue: "EVENTS")
                }

                public static var eventsShows: Self {
                    .init(rawValue: "EVENTS_SHOWS")
                }

                public static var eventsSports: Self {
                    .init(rawValue: "EVENTS_SPORTS")
                }

                public static var giftCard: Self {
                    .init(rawValue: "GIFT_CARD")
                }

                public static var hotelAmenities: Self {
                    .init(rawValue: "HOTEL_AMENITIES")
                }

                public static var hotelBookRoom: Self {
                    .init(rawValue: "HOTEL_BOOK_ROOM")
                }

                public static var join: Self {
                    .init(rawValue: "JOIN")
                }

                public static var parkingAvailable: Self {
                    .init(rawValue: "PARKING_AVAILABLE")
                }

                public static var parkingReserveParking: Self {
                    .init(rawValue: "PARKING_RESERVE_PARKING")
                }

                public static var restaurantJoinWaitlist: Self {
                    .init(rawValue: "RESTAURANT_JOIN_WAITLIST")
                }

                public static var restaurantOrderDelivery: Self {
                    .init(rawValue: "RESTAURANT_ORDER_DELIVERY")
                }

                public static var restaurantOrderFood: Self {
                    .init(rawValue: "RESTAURANT_ORDER_FOOD")
                }

                public static var restaurantOrderTakeout: Self {
                    .init(rawValue: "RESTAURANT_ORDER_TAKEOUT")
                }

                public static var restaurantPickup: Self {
                    .init(rawValue: "RESTAURANT_PICKUP")
                }

                public static var restaurantReservation: Self {
                    .init(rawValue: "RESTAURANT_RESERVATION")
                }

                public static var restaurantViewMenu: Self {
                    .init(rawValue: "RESTAURANT_VIEW_MENU")
                }

                public static var retailServiceQuote: Self {
                    .init(rawValue: "RETAIL_SERVICE_QUOTE")
                }

                public static var retailStoreDelivery: Self {
                    .init(rawValue: "RETAIL_STORE_DELIVERY")
                }

                public static var retailStorePickup: Self {
                    .init(rawValue: "RETAIL_STORE_PICKUP")
                }

                public static var retailStoreShop: Self {
                    .init(rawValue: "RETAIL_STORE_SHOP")
                }

                public static var scheduleAppointment: Self {
                    .init(rawValue: "SCHEDULE_APPOINTMENT")
                }

                public static var services: Self {
                    .init(rawValue: "SERVICES")
                }

                public static var support: Self {
                    .init(rawValue: "SUPPORT")
                }

                public static var theaterNowPlaying: Self {
                    .init(rawValue: "THEATER_NOW_PLAYING")
                }

                public static var viewAvailability: Self {
                    .init(rawValue: "VIEW_AVAILABILITY")
                }

                public static var viewPricing: Self {
                    .init(rawValue: "VIEW_PRICING")
                }

                public var description: String {
                    rawValue
                }

                public var rawValue: String

                public init(rawValue: String) {
                    self.rawValue = rawValue
                }
            }

            public struct PhoneNumber: Hashable, Codable, Sendable {
                public var type: `Type`?

                public var intent: String?

                public var number: String?

                public init(
                    type: `Type`? = nil,
                    intent: String? = nil,
                    number: String? = nil
                ) {
                    self.type = type
                    self.intent = intent
                    self.number = number
                }

                private enum CodingKeys: String, CodingKey {
                    case type
                    case intent
                    case number
                }

                public struct `Type`: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
                    public static var fax: Self {
                        .init(rawValue: "FAX")
                    }

                    public static var landline: Self {
                        .init(rawValue: "LANDLINE")
                    }

                    public static var mobile: Self {
                        .init(rawValue: "MOBILE")
                    }

                    public static var tollfree: Self {
                        .init(rawValue: "TOLLFREE")
                    }

                    public var description: String {
                        rawValue
                    }

                    public var rawValue: String

                    public init(rawValue: String) {
                        self.rawValue = rawValue
                    }
                }
            }

            public struct Relationship: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
                public static var authorized: Self {
                    .init(rawValue: "AUTHORIZED")
                }

                public static var other: Self {
                    .init(rawValue: "OTHER")
                }

                public static var owner: Self {
                    .init(rawValue: "OWNER")
                }

                public var description: String {
                    rawValue
                }

                public var rawValue: String

                public init(rawValue: String) {
                    self.rawValue = rawValue
                }
            }
        }

        public struct PlaceStatus: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var matched: Self {
                .init(rawValue: "MATCHED")
            }

            public static var noMatch: Self {
                .init(rawValue: "NO_MATCH")
            }

            public static var pending: Self {
                .init(rawValue: "PENDING")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }

        public struct Status: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var appTransferInProgress: Self {
                .init(rawValue: "APP_TRANSFER_IN_PROGRESS")
            }

            public static var deactivated: Self {
                .init(rawValue: "DEACTIVATED")
            }

            public static var received: Self {
                .init(rawValue: "RECEIVED")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }
    }

    public struct Relationships: Hashable, Codable, Sendable {
        public var appClip: AppClip?

        public var headerImage: HeaderImage?

        public var localizations: Localizations?

        public init(
            appClip: AppClip? = nil,
            headerImage: HeaderImage? = nil,
            localizations: Localizations? = nil
        ) {
            self.appClip = appClip
            self.headerImage = headerImage
            self.localizations = localizations
        }

        private enum CodingKeys: String, CodingKey {
            case appClip
            case headerImage
            case localizations
        }

        public struct AppClip: Hashable, Codable, Sendable {
            public var data: Data?

            public init(data: Data? = nil) {
                self.data = data
            }

            private enum CodingKeys: String, CodingKey {
                case data
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case appClips
                }
            }
        }

        public struct HeaderImage: Hashable, Codable, Sendable {
            public var data: Data?

            public init(data: Data? = nil) {
                self.data = data
            }

            private enum CodingKeys: String, CodingKey {
                case data
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case appClipAdvancedExperienceImages
                }
            }
        }

        public struct Localizations: Hashable, Codable, Sendable {
            public var data: [Data]?

            public var meta: PagingInformation?

            public init(
                data: [Data]? = nil,
                meta: PagingInformation? = nil
            ) {
                self.data = data
                self.meta = meta
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case meta
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case appClipAdvancedExperienceLocalizations
                }
            }
        }
    }
}

// swiftlint:enable all
