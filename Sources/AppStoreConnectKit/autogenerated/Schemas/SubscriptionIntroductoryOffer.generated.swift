// autogenerated

// swiftlint:disable all
import Foundation

public struct SubscriptionIntroductoryOffer: Hashable, Codable {
    public var id: String

    public var type: `Type`

    public var attributes: Attributes?

    public var relationships: Relationships?

    public var links: ResourceLinks

    public init(
        id: String,
        type: `Type`,
        attributes: Attributes? = nil,
        relationships: Relationships? = nil,
        links: ResourceLinks
    ) {
        self.id = id
        self.type = type
        self.attributes = attributes
        self.relationships = relationships
        self.links = links
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case type
        case attributes
        case relationships
        case links
    }

    public enum `Type`: String, Hashable, Codable {
        case subscriptionIntroductoryOffers
    }

    public struct Attributes: Hashable, Codable {
        public var duration: SubscriptionOfferDuration?

        public var endDate: String?

        public var numberOfPeriods: Int?

        public var offerMode: SubscriptionOfferMode?

        public var startDate: String?

        public init(
            duration: SubscriptionOfferDuration? = nil,
            endDate: String? = nil,
            numberOfPeriods: Int? = nil,
            offerMode: SubscriptionOfferMode? = nil,
            startDate: String? = nil
        ) {
            self.duration = duration
            self.endDate = endDate
            self.numberOfPeriods = numberOfPeriods
            self.offerMode = offerMode
            self.startDate = startDate
        }

        private enum CodingKeys: String, CodingKey {
            case duration
            case endDate
            case numberOfPeriods
            case offerMode
            case startDate
        }
    }

    public struct Relationships: Hashable, Codable {
        public var subscription: Subscription?

        public var subscriptionPricePoint: SubscriptionPricePoint?

        public var territory: Territory?

        public init(
            subscription: Subscription? = nil,
            subscriptionPricePoint: SubscriptionPricePoint? = nil,
            territory: Territory? = nil
        ) {
            self.subscription = subscription
            self.subscriptionPricePoint = subscriptionPricePoint
            self.territory = territory
        }

        private enum CodingKeys: String, CodingKey {
            case subscription
            case subscriptionPricePoint
            case territory
        }

        public struct Subscription: Hashable, Codable {
            public var data: Data?

            public var links: Links?

            public init(
                data: Data? = nil,
                links: Links? = nil
            ) {
                self.data = data
                self.links = links
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
            }

            public struct Data: Hashable, Codable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable {
                    case subscriptions
                }
            }

            public struct Links: Hashable, Codable {
                public var related: URL?

                public var `self`: URL?

                public init(
                    related: URL? = nil,
                    self _self: URL? = nil
                ) {
                    self.related = related
                    self.`self` = _self
                }

                private enum CodingKeys: String, CodingKey {
                    case related
                    case `self` = "self"
                }
            }
        }

        public struct SubscriptionPricePoint: Hashable, Codable {
            public var data: Data?

            public var links: Links?

            public init(
                data: Data? = nil,
                links: Links? = nil
            ) {
                self.data = data
                self.links = links
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
            }

            public struct Data: Hashable, Codable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable {
                    case subscriptionPricePoints
                }
            }

            public struct Links: Hashable, Codable {
                public var related: URL?

                public var `self`: URL?

                public init(
                    related: URL? = nil,
                    self _self: URL? = nil
                ) {
                    self.related = related
                    self.`self` = _self
                }

                private enum CodingKeys: String, CodingKey {
                    case related
                    case `self` = "self"
                }
            }
        }

        public struct Territory: Hashable, Codable {
            public var data: Data?

            public var links: Links?

            public init(
                data: Data? = nil,
                links: Links? = nil
            ) {
                self.data = data
                self.links = links
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
            }

            public struct Data: Hashable, Codable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable {
                    case territories
                }
            }

            public struct Links: Hashable, Codable {
                public var related: URL?

                public var `self`: URL?

                public init(
                    related: URL? = nil,
                    self _self: URL? = nil
                ) {
                    self.related = related
                    self.`self` = _self
                }

                private enum CodingKeys: String, CodingKey {
                    case related
                    case `self` = "self"
                }
            }
        }
    }
}

// swiftlint:enable all
