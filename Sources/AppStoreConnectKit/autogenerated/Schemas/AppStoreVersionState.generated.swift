// autogenerated

// swiftlint:disable all
import Foundation

public struct AppStoreVersionState: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
    public static var accepted: Self {
        .init(rawValue: "ACCEPTED")
    }

    public static var developerRejected: Self {
        .init(rawValue: "DEVELOPER_REJECTED")
    }

    public static var developerRemovedFromSale: Self {
        .init(rawValue: "DEVELOPER_REMOVED_FROM_SALE")
    }

    public static var inReview: Self {
        .init(rawValue: "IN_REVIEW")
    }

    public static var invalidBinary: Self {
        .init(rawValue: "INVALID_BINARY")
    }

    public static var metadataRejected: Self {
        .init(rawValue: "METADATA_REJECTED")
    }

    public static var notApplicable: Self {
        .init(rawValue: "NOT_APPLICABLE")
    }

    public static var pendingAppleRelease: Self {
        .init(rawValue: "PENDING_APPLE_RELEASE")
    }

    public static var pendingContract: Self {
        .init(rawValue: "PENDING_CONTRACT")
    }

    public static var pendingDeveloperRelease: Self {
        .init(rawValue: "PENDING_DEVELOPER_RELEASE")
    }

    public static var preorderReadyForSale: Self {
        .init(rawValue: "PREORDER_READY_FOR_SALE")
    }

    public static var prepareForSubmission: Self {
        .init(rawValue: "PREPARE_FOR_SUBMISSION")
    }

    public static var processingForAppStore: Self {
        .init(rawValue: "PROCESSING_FOR_APP_STORE")
    }

    public static var readyForReview: Self {
        .init(rawValue: "READY_FOR_REVIEW")
    }

    public static var readyForSale: Self {
        .init(rawValue: "READY_FOR_SALE")
    }

    public static var rejected: Self {
        .init(rawValue: "REJECTED")
    }

    public static var removedFromSale: Self {
        .init(rawValue: "REMOVED_FROM_SALE")
    }

    public static var replacedWithNewVersion: Self {
        .init(rawValue: "REPLACED_WITH_NEW_VERSION")
    }

    public static var waitingForExportCompliance: Self {
        .init(rawValue: "WAITING_FOR_EXPORT_COMPLIANCE")
    }

    public static var waitingForReview: Self {
        .init(rawValue: "WAITING_FOR_REVIEW")
    }

    public var description: String {
        rawValue
    }

    public var rawValue: String

    public init(rawValue: String) {
        self.rawValue = rawValue
    }
}

// swiftlint:enable all
