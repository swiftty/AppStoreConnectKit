// autogenerated

// swiftlint:disable all
import Foundation

public struct AppEventLocalization: Hashable, Codable, Sendable {
    public var id: String

    public var type: `Type`

    public var attributes: Attributes?

    public var relationships: Relationships?

    public var links: ResourceLinks?

    public init(
        id: String,
        type: `Type`,
        attributes: Attributes? = nil,
        relationships: Relationships? = nil,
        links: ResourceLinks? = nil
    ) {
        self.id = id
        self.type = type
        self.attributes = attributes
        self.relationships = relationships
        self.links = links
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case type
        case attributes
        case relationships
        case links
    }

    public enum `Type`: String, Hashable, Codable, Sendable {
        case appEventLocalizations
    }

    public struct Attributes: Hashable, Codable, Sendable {
        public var locale: String?

        public var longDescription: String?

        public var name: String?

        public var shortDescription: String?

        public init(
            locale: String? = nil,
            longDescription: String? = nil,
            name: String? = nil,
            shortDescription: String? = nil
        ) {
            self.locale = locale
            self.longDescription = longDescription
            self.name = name
            self.shortDescription = shortDescription
        }

        private enum CodingKeys: String, CodingKey {
            case locale
            case longDescription
            case name
            case shortDescription
        }
    }

    public struct Relationships: Hashable, Codable, Sendable {
        public var appEvent: AppEvent?

        public var appEventScreenshots: AppEventScreenshots?

        public var appEventVideoClips: AppEventVideoClips?

        public init(
            appEvent: AppEvent? = nil,
            appEventScreenshots: AppEventScreenshots? = nil,
            appEventVideoClips: AppEventVideoClips? = nil
        ) {
            self.appEvent = appEvent
            self.appEventScreenshots = appEventScreenshots
            self.appEventVideoClips = appEventVideoClips
        }

        private enum CodingKeys: String, CodingKey {
            case appEvent
            case appEventScreenshots
            case appEventVideoClips
        }

        public struct AppEvent: Hashable, Codable, Sendable {
            public var data: Data?

            public init(data: Data? = nil) {
                self.data = data
            }

            private enum CodingKeys: String, CodingKey {
                case data
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case appEvents
                }
            }
        }

        public struct AppEventScreenshots: Hashable, Codable, Sendable {
            public var data: [Data]?

            public var links: RelationshipLinks?

            public var meta: PagingInformation?

            public init(
                data: [Data]? = nil,
                links: RelationshipLinks? = nil,
                meta: PagingInformation? = nil
            ) {
                self.data = data
                self.links = links
                self.meta = meta
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
                case meta
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case appEventScreenshots
                }
            }
        }

        public struct AppEventVideoClips: Hashable, Codable, Sendable {
            public var data: [Data]?

            public var links: RelationshipLinks?

            public var meta: PagingInformation?

            public init(
                data: [Data]? = nil,
                links: RelationshipLinks? = nil,
                meta: PagingInformation? = nil
            ) {
                self.data = data
                self.links = links
                self.meta = meta
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
                case meta
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case appEventVideoClips
                }
            }
        }
    }
}

// swiftlint:enable all
