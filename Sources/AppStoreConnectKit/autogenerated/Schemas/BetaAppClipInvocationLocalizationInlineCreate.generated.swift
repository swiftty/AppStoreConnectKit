// autogenerated

// swiftlint:disable all
import Foundation

public struct BetaAppClipInvocationLocalizationInlineCreate: Hashable, Codable {
    public var id: String?

    public var type: `Type`

    public var attributes: Attributes

    public var relationships: Relationships?

    public init(
        id: String? = nil,
        type: `Type`,
        attributes: Attributes,
        relationships: Relationships? = nil
    ) {
        self.id = id
        self.type = type
        self.attributes = attributes
        self.relationships = relationships
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case type
        case attributes
        case relationships
    }

    public enum `Type`: Hashable, Codable, RawRepresentable {
        case betaAppClipInvocationLocalizations
        case unknown(String)

        public var rawValue: String {
            switch self {
            case .betaAppClipInvocationLocalizations: return "betaAppClipInvocationLocalizations"
            case .unknown(let rawValue): return rawValue
            }
        }

        public init(rawValue: String) {
            switch rawValue {
            case "betaAppClipInvocationLocalizations": self = .betaAppClipInvocationLocalizations
            default: self = .unknown(rawValue)
            }
        }
    }

    public struct Attributes: Hashable, Codable {
        public var locale: String

        public var title: String

        public init(
            locale: String,
            title: String
        ) {
            self.locale = locale
            self.title = title
        }

        private enum CodingKeys: String, CodingKey {
            case locale
            case title
        }
    }

    public struct Relationships: Hashable, Codable {
        public var betaAppClipInvocation: BetaAppClipInvocation?

        public init(betaAppClipInvocation: BetaAppClipInvocation? = nil) {
            self.betaAppClipInvocation = betaAppClipInvocation
        }

        private enum CodingKeys: String, CodingKey {
            case betaAppClipInvocation
        }

        public struct BetaAppClipInvocation: Hashable, Codable {
            public var data: Data?

            public init(data: Data? = nil) {
                self.data = data
            }

            private enum CodingKeys: String, CodingKey {
                case data
            }

            public struct Data: Hashable, Codable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: Hashable, Codable, RawRepresentable {
                    case betaAppClipInvocations
                    case unknown(String)

                    public var rawValue: String {
                        switch self {
                        case .betaAppClipInvocations: return "betaAppClipInvocations"
                        case .unknown(let rawValue): return rawValue
                        }
                    }

                    public init(rawValue: String) {
                        switch rawValue {
                        case "betaAppClipInvocations": self = .betaAppClipInvocations
                        default: self = .unknown(rawValue)
                        }
                    }
                }
            }
        }
    }
}

// swiftlint:enable all
