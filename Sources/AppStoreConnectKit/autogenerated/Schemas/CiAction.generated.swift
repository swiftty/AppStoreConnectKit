// autogenerated

// swiftlint:disable all
import Foundation

public struct CiAction: Hashable, Codable, Sendable {
    public var actionType: CiActionType?

    public var buildDistributionAudience: BuildAudienceType?

    public var destination: Destination?

    public var isRequiredToPass: Bool?

    public var name: String?

    public var platform: Platform?

    public var scheme: String?

    public var testConfiguration: TestConfiguration?

    public init(
        actionType: CiActionType? = nil,
        buildDistributionAudience: BuildAudienceType? = nil,
        destination: Destination? = nil,
        isRequiredToPass: Bool? = nil,
        name: String? = nil,
        platform: Platform? = nil,
        scheme: String? = nil,
        testConfiguration: TestConfiguration? = nil
    ) {
        self.actionType = actionType
        self.buildDistributionAudience = buildDistributionAudience
        self.destination = destination
        self.isRequiredToPass = isRequiredToPass
        self.name = name
        self.platform = platform
        self.scheme = scheme
        self.testConfiguration = testConfiguration
    }

    private enum CodingKeys: String, CodingKey {
        case actionType
        case buildDistributionAudience
        case destination
        case isRequiredToPass
        case name
        case platform
        case scheme
        case testConfiguration
    }

    public struct Destination: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
        public static var anyMac: Self {
            .init(rawValue: "ANY_MAC")
        }

        public static var anyMacCatalyst: Self {
            .init(rawValue: "ANY_MAC_CATALYST")
        }

        public static var anyTvOSDevice: Self {
            .init(rawValue: "ANY_TVOS_DEVICE")
        }

        public static var anyTvOSSimulator: Self {
            .init(rawValue: "ANY_TVOS_SIMULATOR")
        }

        public static var anyVisionosDevice: Self {
            .init(rawValue: "ANY_VISIONOS_DEVICE")
        }

        public static var anyVisionosSimulator: Self {
            .init(rawValue: "ANY_VISIONOS_SIMULATOR")
        }

        public static var anyWatchOSDevice: Self {
            .init(rawValue: "ANY_WATCHOS_DEVICE")
        }

        public static var anyWatchOSSimulator: Self {
            .init(rawValue: "ANY_WATCHOS_SIMULATOR")
        }

        public static var anyiOSDevice: Self {
            .init(rawValue: "ANY_IOS_DEVICE")
        }

        public static var anyiOSSimulator: Self {
            .init(rawValue: "ANY_IOS_SIMULATOR")
        }

        public var description: String {
            rawValue
        }

        public var rawValue: String

        public init(rawValue: String) {
            self.rawValue = rawValue
        }
    }

    public struct Platform: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
        public static var iOS: Self {
            .init(rawValue: "IOS")
        }

        public static var macOS: Self {
            .init(rawValue: "MACOS")
        }

        public static var tvOS: Self {
            .init(rawValue: "TVOS")
        }

        public static var visionos: Self {
            .init(rawValue: "VISIONOS")
        }

        public static var watchOS: Self {
            .init(rawValue: "WATCHOS")
        }

        public var description: String {
            rawValue
        }

        public var rawValue: String

        public init(rawValue: String) {
            self.rawValue = rawValue
        }
    }

    public struct TestConfiguration: Hashable, Codable, Sendable {
        public var kind: Kind?

        public var testDestinations: [CiTestDestination]?

        public var testPlanName: String?

        public init(
            kind: Kind? = nil,
            testDestinations: [CiTestDestination]? = nil,
            testPlanName: String? = nil
        ) {
            self.kind = kind
            self.testDestinations = testDestinations
            self.testPlanName = testPlanName
        }

        private enum CodingKeys: String, CodingKey {
            case kind
            case testDestinations
            case testPlanName
        }

        public struct Kind: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var specificTestPlans: Self {
                .init(rawValue: "SPECIFIC_TEST_PLANS")
            }

            public static var useSchemeSettings: Self {
                .init(rawValue: "USE_SCHEME_SETTINGS")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }
    }
}

// swiftlint:enable all
