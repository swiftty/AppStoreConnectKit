// autogenerated

// swiftlint:disable all
import Foundation

public struct DiagnosticSignature: Hashable, Codable, Sendable {
    public var id: String

    public var type: `Type`

    public var attributes: Attributes?

    public var relationships: Relationships?

    public var links: ResourceLinks?

    public init(
        id: String,
        type: `Type`,
        attributes: Attributes? = nil,
        relationships: Relationships? = nil,
        links: ResourceLinks? = nil
    ) {
        self.id = id
        self.type = type
        self.attributes = attributes
        self.relationships = relationships
        self.links = links
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case type
        case attributes
        case relationships
        case links
    }

    public enum `Type`: String, Hashable, Codable, Sendable {
        case diagnosticSignatures
    }

    public struct Attributes: Hashable, Codable, Sendable {
        public var diagnosticType: DiagnosticType?

        public var insight: DiagnosticInsight?

        public var signature: String?

        public var weight: Float?

        public init(
            diagnosticType: DiagnosticType? = nil,
            insight: DiagnosticInsight? = nil,
            signature: String? = nil,
            weight: Float? = nil
        ) {
            self.diagnosticType = diagnosticType
            self.insight = insight
            self.signature = signature
            self.weight = weight
        }

        private enum CodingKeys: String, CodingKey {
            case diagnosticType
            case insight
            case signature
            case weight
        }

        public struct DiagnosticType: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var diskWrites: Self {
                .init(rawValue: "DISK_WRITES")
            }

            public static var hangs: Self {
                .init(rawValue: "HANGS")
            }

            public static var launches: Self {
                .init(rawValue: "LAUNCHES")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }
    }

    public struct Relationships: Hashable, Codable, Sendable {
        public var logs: Logs?

        public init(logs: Logs? = nil) {
            self.logs = logs
        }

        private enum CodingKeys: String, CodingKey {
            case logs
        }

        public struct Logs: Hashable, Codable, Sendable {
            public var links: RelationshipLinks?

            public init(links: RelationshipLinks? = nil) {
                self.links = links
            }

            private enum CodingKeys: String, CodingKey {
                case links
            }
        }
    }
}

// swiftlint:enable all
