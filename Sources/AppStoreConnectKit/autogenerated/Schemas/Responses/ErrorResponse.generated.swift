// autogenerated

// swiftlint:disable all
import Foundation

public struct ErrorResponse: Error, Hashable, Codable, Sendable {
    public var errors: [Errors]?

    public init(errors: [Errors]? = nil) {
        self.errors = errors
    }

    private enum CodingKeys: String, CodingKey {
        case errors
    }

    public struct Errors: Hashable, Codable, Sendable {
        public var id: String?

        public var code: String

        public var detail: String

        public var links: ErrorLinks?

        public var meta: [String: Data]?

        public var source: Source?

        public var status: String

        public var title: String

        public init(
            id: String? = nil,
            code: String,
            detail: String,
            links: ErrorLinks? = nil,
            meta: [String: Data]? = nil,
            source: Source? = nil,
            status: String,
            title: String
        ) {
            self.id = id
            self.code = code
            self.detail = detail
            self.links = links
            self.meta = meta
            self.source = source
            self.status = status
            self.title = title
        }

        private enum CodingKeys: String, CodingKey {
            case id
            case code
            case detail
            case links
            case meta
            case source
            case status
            case title
        }

        public enum Source: Hashable, Codable, Sendable {
            case jsonPointer(JsonPointer)
            case parameter(Parameter)

            public init(from decoder: Decoder) throws {
                self = try {
                    var lastError: Error!
                    do {
                        return .jsonPointer(try JsonPointer(from: decoder))
                    } catch {
                        lastError = error
                    }
                    do {
                        return .parameter(try Parameter(from: decoder))
                    } catch {
                        lastError = error
                    }
                    throw lastError
                }()
            }

            public func encode(to encoder: Encoder) throws {
                switch self {
                case .jsonPointer(let value):
                    try value.encode(to: encoder)

                case .parameter(let value):
                    try value.encode(to: encoder)
                }
            }
        }
    }
}

// swiftlint:enable all
