// autogenerated

// swiftlint:disable all
import Foundation

public struct SubscriptionOfferCodeResponse: Hashable, Codable {
    public var data: SubscriptionOfferCode

    public var included: [Included]?

    public var links: DocumentLinks

    public init(
        data: SubscriptionOfferCode,
        included: [Included]? = nil,
        links: DocumentLinks
    ) {
        self.data = data
        self.included = included
        self.links = links
    }

    private enum CodingKeys: String, CodingKey {
        case data
        case included
        case links
    }

    public enum Included: Hashable, Codable {
        case subscription(Subscription)
        case subscriptionOfferCodeOneTimeUseCode(SubscriptionOfferCodeOneTimeUseCode)
        case subscriptionOfferCodeCustomCode(SubscriptionOfferCodeCustomCode)
        case subscriptionOfferCodePrice(SubscriptionOfferCodePrice)

        public init(from decoder: Decoder) throws {
            self = try {
                var lastError: Error!
                do {
                    return .subscription(try Subscription(from: decoder))
                } catch {
                    lastError = error
                }
                do {
                    return .subscriptionOfferCodeOneTimeUseCode(try SubscriptionOfferCodeOneTimeUseCode(from: decoder))
                } catch {
                    lastError = error
                }
                do {
                    return .subscriptionOfferCodeCustomCode(try SubscriptionOfferCodeCustomCode(from: decoder))
                } catch {
                    lastError = error
                }
                do {
                    return .subscriptionOfferCodePrice(try SubscriptionOfferCodePrice(from: decoder))
                } catch {
                    lastError = error
                }
                throw lastError
            }()
        }

        public func encode(to encoder: Encoder) throws {
            switch self {
            case .subscription(let value):
                try value.encode(to: encoder)

            case .subscriptionOfferCodeOneTimeUseCode(let value):
                try value.encode(to: encoder)

            case .subscriptionOfferCodeCustomCode(let value):
                try value.encode(to: encoder)

            case .subscriptionOfferCodePrice(let value):
                try value.encode(to: encoder)
            }
        }
    }
}

// swiftlint:enable all
