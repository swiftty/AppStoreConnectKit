// autogenerated

// swiftlint:disable all
import Foundation

public struct GameCenterLeaderboardSetLocalizationsResponse: Hashable, Codable {
    public var data: [GameCenterLeaderboardSetLocalization]

    public var included: [Included]?

    public var links: PagedDocumentLinks

    public var meta: PagingInformation?

    public init(
        data: [GameCenterLeaderboardSetLocalization],
        included: [Included]? = nil,
        links: PagedDocumentLinks,
        meta: PagingInformation? = nil
    ) {
        self.data = data
        self.included = included
        self.links = links
        self.meta = meta
    }

    private enum CodingKeys: String, CodingKey {
        case data
        case included
        case links
        case meta
    }

    public enum Included: Hashable, Codable {
        case gameCenterLeaderboardSet(GameCenterLeaderboardSet)
        case gameCenterLeaderboardSetImage(GameCenterLeaderboardSetImage)

        public init(from decoder: Decoder) throws {
            self = try {
                var lastError: Error!
                do {
                    return .gameCenterLeaderboardSet(try GameCenterLeaderboardSet(from: decoder))
                } catch {
                    lastError = error
                }
                do {
                    return .gameCenterLeaderboardSetImage(try GameCenterLeaderboardSetImage(from: decoder))
                } catch {
                    lastError = error
                }
                throw lastError
            }()
        }

        public func encode(to encoder: Encoder) throws {
            switch self {
            case .gameCenterLeaderboardSet(let value):
                try value.encode(to: encoder)

            case .gameCenterLeaderboardSetImage(let value):
                try value.encode(to: encoder)
            }
        }
    }
}

// swiftlint:enable all
