// autogenerated

// swiftlint:disable all
import Foundation

public struct GameCenterMatchmakingRuleErrorsV1MetricResponse: Hashable, Codable, Sendable {
    public var data: [Data]

    public var links: PagedDocumentLinks

    public var meta: PagingInformation?

    public init(
        data: [Data],
        links: PagedDocumentLinks,
        meta: PagingInformation? = nil
    ) {
        self.data = data
        self.links = links
        self.meta = meta
    }

    private enum CodingKeys: String, CodingKey {
        case data
        case links
        case meta
    }

    public struct Data: Hashable, Codable, Sendable {
        public var dataPoints: DataPoints?

        public var dimensions: Dimensions?

        public var granularity: Granularity?

        public init(
            dataPoints: DataPoints? = nil,
            dimensions: Dimensions? = nil,
            granularity: Granularity? = nil
        ) {
            self.dataPoints = dataPoints
            self.dimensions = dimensions
            self.granularity = granularity
        }

        private enum CodingKeys: String, CodingKey {
            case dataPoints
            case dimensions
            case granularity
        }

        public struct DataPoints: Hashable, Codable, Sendable {
            public var end: String?

            public var start: String?

            public var values: Values?

            public init(
                end: String? = nil,
                start: String? = nil,
                values: Values? = nil
            ) {
                self.end = end
                self.start = start
                self.values = values
            }

            private enum CodingKeys: String, CodingKey {
                case end
                case start
                case values
            }

            public struct Values: Hashable, Codable, Sendable {
                public var count: Int?

                public init(count: Int? = nil) {
                    self.count = count
                }

                private enum CodingKeys: String, CodingKey {
                    case count
                }
            }
        }

        public struct Dimensions: Hashable, Codable, Sendable {
            public var gameCenterMatchmakingQueue: GameCenterMatchmakingQueue?

            public init(gameCenterMatchmakingQueue: GameCenterMatchmakingQueue? = nil) {
                self.gameCenterMatchmakingQueue = gameCenterMatchmakingQueue
            }

            private enum CodingKeys: String, CodingKey {
                case gameCenterMatchmakingQueue
            }

            public struct GameCenterMatchmakingQueue: Hashable, Codable, Sendable {
                public var data: String?

                public var links: Links?

                public init(
                    data: String? = nil,
                    links: Links? = nil
                ) {
                    self.data = data
                    self.links = links
                }

                private enum CodingKeys: String, CodingKey {
                    case data
                    case links
                }

                public struct Links: Hashable, Codable, Sendable {
                    public var groupBy: URL?

                    public var related: URL?

                    public init(
                        groupBy: URL? = nil,
                        related: URL? = nil
                    ) {
                        self.groupBy = groupBy
                        self.related = related
                    }

                    private enum CodingKeys: String, CodingKey {
                        case groupBy
                        case related
                    }
                }
            }
        }

        public struct Granularity: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var p1D: Self {
                .init(rawValue: "P1D")
            }

            public static var pT15M: Self {
                .init(rawValue: "PT15M")
            }

            public static var pT1H: Self {
                .init(rawValue: "PT1H")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }
    }
}

// swiftlint:enable all
