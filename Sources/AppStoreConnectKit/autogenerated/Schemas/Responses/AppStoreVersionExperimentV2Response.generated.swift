// autogenerated

// swiftlint:disable all
import Foundation

public struct AppStoreVersionExperimentV2Response: Hashable, Codable {
    public var data: AppStoreVersionExperimentV2

    public var included: [Included]?

    public var links: DocumentLinks

    public init(
        data: AppStoreVersionExperimentV2,
        included: [Included]? = nil,
        links: DocumentLinks
    ) {
        self.data = data
        self.included = included
        self.links = links
    }

    private enum CodingKeys: String, CodingKey {
        case data
        case included
        case links
    }

    public enum Included: Hashable, Codable {
        case app(App)
        case appStoreVersion(AppStoreVersion)
        case appStoreVersionExperimentTreatment(AppStoreVersionExperimentTreatment)

        public init(from decoder: Decoder) throws {
            self = try {
                var lastError: Error!
                do {
                    return .app(try App(from: decoder))
                } catch {
                    lastError = error
                }
                do {
                    return .appStoreVersion(try AppStoreVersion(from: decoder))
                } catch {
                    lastError = error
                }
                do {
                    return .appStoreVersionExperimentTreatment(try AppStoreVersionExperimentTreatment(from: decoder))
                } catch {
                    lastError = error
                }
                throw lastError
            }()
        }

        public func encode(to encoder: Encoder) throws {
            switch self {
            case .app(let value):
                try value.encode(to: encoder)

            case .appStoreVersion(let value):
                try value.encode(to: encoder)

            case .appStoreVersionExperimentTreatment(let value):
                try value.encode(to: encoder)
            }
        }
    }
}

// swiftlint:enable all
