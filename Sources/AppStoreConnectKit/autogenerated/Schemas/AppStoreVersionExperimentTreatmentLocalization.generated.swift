// autogenerated

// swiftlint:disable all
import Foundation

public struct AppStoreVersionExperimentTreatmentLocalization: Hashable, Codable, Sendable {
    public var id: String

    public var type: `Type`

    public var attributes: Attributes?

    public var relationships: Relationships?

    public var links: ResourceLinks?

    public init(
        id: String,
        type: `Type`,
        attributes: Attributes? = nil,
        relationships: Relationships? = nil,
        links: ResourceLinks? = nil
    ) {
        self.id = id
        self.type = type
        self.attributes = attributes
        self.relationships = relationships
        self.links = links
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case type
        case attributes
        case relationships
        case links
    }

    public enum `Type`: String, Hashable, Codable, Sendable {
        case appStoreVersionExperimentTreatmentLocalizations
    }

    public struct Attributes: Hashable, Codable, Sendable {
        public var locale: String?

        public init(locale: String? = nil) {
            self.locale = locale
        }

        private enum CodingKeys: String, CodingKey {
            case locale
        }
    }

    public struct Relationships: Hashable, Codable, Sendable {
        public var appPreviewSets: AppPreviewSets?

        public var appScreenshotSets: AppScreenshotSets?

        public var appStoreVersionExperimentTreatment: AppStoreVersionExperimentTreatment?

        public init(
            appPreviewSets: AppPreviewSets? = nil,
            appScreenshotSets: AppScreenshotSets? = nil,
            appStoreVersionExperimentTreatment: AppStoreVersionExperimentTreatment? = nil
        ) {
            self.appPreviewSets = appPreviewSets
            self.appScreenshotSets = appScreenshotSets
            self.appStoreVersionExperimentTreatment = appStoreVersionExperimentTreatment
        }

        private enum CodingKeys: String, CodingKey {
            case appPreviewSets
            case appScreenshotSets
            case appStoreVersionExperimentTreatment
        }

        public struct AppPreviewSets: Hashable, Codable, Sendable {
            public var data: [Data]?

            public var links: RelationshipLinks?

            public var meta: PagingInformation?

            public init(
                data: [Data]? = nil,
                links: RelationshipLinks? = nil,
                meta: PagingInformation? = nil
            ) {
                self.data = data
                self.links = links
                self.meta = meta
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
                case meta
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case appPreviewSets
                }
            }
        }

        public struct AppScreenshotSets: Hashable, Codable, Sendable {
            public var data: [Data]?

            public var links: RelationshipLinks?

            public var meta: PagingInformation?

            public init(
                data: [Data]? = nil,
                links: RelationshipLinks? = nil,
                meta: PagingInformation? = nil
            ) {
                self.data = data
                self.links = links
                self.meta = meta
            }

            private enum CodingKeys: String, CodingKey {
                case data
                case links
                case meta
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case appScreenshotSets
                }
            }
        }

        public struct AppStoreVersionExperimentTreatment: Hashable, Codable, Sendable {
            public var data: Data?

            public init(data: Data? = nil) {
                self.data = data
            }

            private enum CodingKeys: String, CodingKey {
                case data
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case appStoreVersionExperimentTreatments
                }
            }
        }
    }
}

// swiftlint:enable all
