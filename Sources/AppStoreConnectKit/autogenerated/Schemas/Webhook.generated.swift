// autogenerated

// swiftlint:disable all
import Foundation

public struct Webhook: Hashable, Codable, Sendable {
    public var id: String

    public var type: `Type`

    public var attributes: Attributes?

    public var relationships: Relationships?

    public var links: ResourceLinks?

    public init(
        id: String,
        type: `Type`,
        attributes: Attributes? = nil,
        relationships: Relationships? = nil,
        links: ResourceLinks? = nil
    ) {
        self.id = id
        self.type = type
        self.attributes = attributes
        self.relationships = relationships
        self.links = links
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case type
        case attributes
        case relationships
        case links
    }

    public enum `Type`: String, Hashable, Codable, Sendable {
        case webhooks
    }

    public struct Attributes: Hashable, Codable, Sendable {
        public var enabled: Bool?

        public var eventTypes: [WebhookEventType]?

        public var name: String?

        public var url: URL?

        public init(
            enabled: Bool? = nil,
            eventTypes: [WebhookEventType]? = nil,
            name: String? = nil,
            url: URL? = nil
        ) {
            self.enabled = enabled
            self.eventTypes = eventTypes
            self.name = name
            self.url = url
        }

        private enum CodingKeys: String, CodingKey {
            case enabled
            case eventTypes
            case name
            case url
        }
    }

    public struct Relationships: Hashable, Codable, Sendable {
        public var app: App?

        public var deliveries: Deliveries?

        public init(
            app: App? = nil,
            deliveries: Deliveries? = nil
        ) {
            self.app = app
            self.deliveries = deliveries
        }

        private enum CodingKeys: String, CodingKey {
            case app
            case deliveries
        }

        public struct App: Hashable, Codable, Sendable {
            public var data: Data?

            public init(data: Data? = nil) {
                self.data = data
            }

            private enum CodingKeys: String, CodingKey {
                case data
            }

            public struct Data: Hashable, Codable, Sendable {
                public var id: String

                public var type: `Type`

                public init(
                    id: String,
                    type: `Type`
                ) {
                    self.id = id
                    self.type = type
                }

                private enum CodingKeys: String, CodingKey {
                    case id
                    case type
                }

                public enum `Type`: String, Hashable, Codable, Sendable {
                    case apps
                }
            }
        }

        public struct Deliveries: Hashable, Codable, Sendable {
            public var links: RelationshipLinks?

            public init(links: RelationshipLinks? = nil) {
                self.links = links
            }

            private enum CodingKeys: String, CodingKey {
                case links
            }
        }
    }
}

// swiftlint:enable all
