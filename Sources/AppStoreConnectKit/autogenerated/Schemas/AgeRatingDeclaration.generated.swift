// autogenerated

// swiftlint:disable all
import Foundation

public struct AgeRatingDeclaration: Hashable, Codable, Sendable {
    public var id: String

    public var type: `Type`

    public var attributes: Attributes?

    public var links: ResourceLinks?

    public init(
        id: String,
        type: `Type`,
        attributes: Attributes? = nil,
        links: ResourceLinks? = nil
    ) {
        self.id = id
        self.type = type
        self.attributes = attributes
        self.links = links
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case type
        case attributes
        case links
    }

    public enum `Type`: String, Hashable, Codable, Sendable {
        case ageRatingDeclarations
    }

    public struct Attributes: Hashable, Codable, Sendable {
        public var alcoholTobaccoOrDrugUseOrReferences: AlcoholTobaccoOrDrugUseOrReferences?

        public var contests: Contests?

        public var gambling: Bool?

        public var gamblingSimulated: GamblingSimulated?

        public var horrorOrFearThemes: HorrorOrFearThemes?

        public var kidsAgeBand: KidsAgeBand?

        public var koreaAgeRatingOverride: KoreaAgeRatingOverride?

        public var lootBox: Bool?

        public var matureOrSuggestiveThemes: MatureOrSuggestiveThemes?

        public var medicalOrTreatmentInformation: MedicalOrTreatmentInformation?

        public var profanityOrCrudeHumor: ProfanityOrCrudeHumor?

        public var sexualContentGraphicAndNudity: SexualContentGraphicAndNudity?

        public var sexualContentOrNudity: SexualContentOrNudity?

        public var unrestrictedWebAccess: Bool?

        public var violenceCartoonOrFantasy: ViolenceCartoonOrFantasy?

        public var violenceRealistic: ViolenceRealistic?

        public var violenceRealisticProlongedGraphicOrSadistic: ViolenceRealisticProlongedGraphicOrSadistic?

        public init(
            alcoholTobaccoOrDrugUseOrReferences: AlcoholTobaccoOrDrugUseOrReferences? = nil,
            contests: Contests? = nil,
            gambling: Bool? = nil,
            gamblingSimulated: GamblingSimulated? = nil,
            horrorOrFearThemes: HorrorOrFearThemes? = nil,
            kidsAgeBand: KidsAgeBand? = nil,
            koreaAgeRatingOverride: KoreaAgeRatingOverride? = nil,
            lootBox: Bool? = nil,
            matureOrSuggestiveThemes: MatureOrSuggestiveThemes? = nil,
            medicalOrTreatmentInformation: MedicalOrTreatmentInformation? = nil,
            profanityOrCrudeHumor: ProfanityOrCrudeHumor? = nil,
            sexualContentGraphicAndNudity: SexualContentGraphicAndNudity? = nil,
            sexualContentOrNudity: SexualContentOrNudity? = nil,
            unrestrictedWebAccess: Bool? = nil,
            violenceCartoonOrFantasy: ViolenceCartoonOrFantasy? = nil,
            violenceRealistic: ViolenceRealistic? = nil,
            violenceRealisticProlongedGraphicOrSadistic: ViolenceRealisticProlongedGraphicOrSadistic? = nil
        ) {
            self.alcoholTobaccoOrDrugUseOrReferences = alcoholTobaccoOrDrugUseOrReferences
            self.contests = contests
            self.gambling = gambling
            self.gamblingSimulated = gamblingSimulated
            self.horrorOrFearThemes = horrorOrFearThemes
            self.kidsAgeBand = kidsAgeBand
            self.koreaAgeRatingOverride = koreaAgeRatingOverride
            self.lootBox = lootBox
            self.matureOrSuggestiveThemes = matureOrSuggestiveThemes
            self.medicalOrTreatmentInformation = medicalOrTreatmentInformation
            self.profanityOrCrudeHumor = profanityOrCrudeHumor
            self.sexualContentGraphicAndNudity = sexualContentGraphicAndNudity
            self.sexualContentOrNudity = sexualContentOrNudity
            self.unrestrictedWebAccess = unrestrictedWebAccess
            self.violenceCartoonOrFantasy = violenceCartoonOrFantasy
            self.violenceRealistic = violenceRealistic
            self.violenceRealisticProlongedGraphicOrSadistic = violenceRealisticProlongedGraphicOrSadistic
        }

        private enum CodingKeys: String, CodingKey {
            case alcoholTobaccoOrDrugUseOrReferences
            case contests
            case gambling
            case gamblingSimulated
            case horrorOrFearThemes
            case kidsAgeBand
            case koreaAgeRatingOverride
            case lootBox
            case matureOrSuggestiveThemes
            case medicalOrTreatmentInformation
            case profanityOrCrudeHumor
            case sexualContentGraphicAndNudity
            case sexualContentOrNudity
            case unrestrictedWebAccess
            case violenceCartoonOrFantasy
            case violenceRealistic
            case violenceRealisticProlongedGraphicOrSadistic
        }

        public struct AlcoholTobaccoOrDrugUseOrReferences: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var none: Self {
                .init(rawValue: "NONE")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }

        public struct Contests: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var none: Self {
                .init(rawValue: "NONE")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }

        public struct GamblingSimulated: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var none: Self {
                .init(rawValue: "NONE")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }

        public struct HorrorOrFearThemes: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var none: Self {
                .init(rawValue: "NONE")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }

        public struct KoreaAgeRatingOverride: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var fifteenPlus: Self {
                .init(rawValue: "FIFTEEN_PLUS")
            }

            public static var nineteenPlus: Self {
                .init(rawValue: "NINETEEN_PLUS")
            }

            public static var none: Self {
                .init(rawValue: "NONE")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }

        public struct MatureOrSuggestiveThemes: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var none: Self {
                .init(rawValue: "NONE")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }

        public struct MedicalOrTreatmentInformation: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var none: Self {
                .init(rawValue: "NONE")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }

        public struct ProfanityOrCrudeHumor: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var none: Self {
                .init(rawValue: "NONE")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }

        public struct SexualContentGraphicAndNudity: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var none: Self {
                .init(rawValue: "NONE")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }

        public struct SexualContentOrNudity: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var none: Self {
                .init(rawValue: "NONE")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }

        public struct ViolenceCartoonOrFantasy: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var none: Self {
                .init(rawValue: "NONE")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }

        public struct ViolenceRealistic: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var none: Self {
                .init(rawValue: "NONE")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }

        public struct ViolenceRealisticProlongedGraphicOrSadistic: Hashable, Codable, RawRepresentable, CustomStringConvertible, Sendable {
            public static var none: Self {
                .init(rawValue: "NONE")
            }

            public var description: String {
                rawValue
            }

            public var rawValue: String

            public init(rawValue: String) {
                self.rawValue = rawValue
            }
        }
    }
}

// swiftlint:enable all
