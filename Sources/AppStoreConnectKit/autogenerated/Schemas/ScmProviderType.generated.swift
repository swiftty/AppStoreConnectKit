// autogenerated

// swiftlint:disable all
import Foundation

public struct ScmProviderType: Hashable, Codable {
    public var displayName: String?

    public var isOnPremise: Bool?

    public var kind: Kind?

    public init(
        displayName: String? = nil,
        isOnPremise: Bool? = nil,
        kind: Kind? = nil
    ) {
        self.displayName = displayName
        self.isOnPremise = isOnPremise
        self.kind = kind
    }

    private enum CodingKeys: String, CodingKey {
        case displayName
        case isOnPremise
        case kind
    }

    public enum Kind: Hashable, Codable, RawRepresentable {
        case bitbucketCloud
        case bitbucketServer
        case githubCloud
        case githubEnterprise
        case gitlabCloud
        case gitlabSelfManaged
        case unknown(String)

        public var rawValue: String {
            switch self {
            case .bitbucketCloud: return "BITBUCKET_CLOUD"
            case .bitbucketServer: return "BITBUCKET_SERVER"
            case .githubCloud: return "GITHUB_CLOUD"
            case .githubEnterprise: return "GITHUB_ENTERPRISE"
            case .gitlabCloud: return "GITLAB_CLOUD"
            case .gitlabSelfManaged: return "GITLAB_SELF_MANAGED"
            case .unknown(let rawValue): return rawValue
            }
        }

        public init(rawValue: String) {
            switch rawValue {
            case "BITBUCKET_CLOUD": self = .bitbucketCloud
            case "BITBUCKET_SERVER": self = .bitbucketServer
            case "GITHUB_CLOUD": self = .githubCloud
            case "GITHUB_ENTERPRISE": self = .githubEnterprise
            case "GITLAB_CLOUD": self = .gitlabCloud
            case "GITLAB_SELF_MANAGED": self = .gitlabSelfManaged
            default: self = .unknown(rawValue)
            }
        }
    }
}

// swiftlint:enable all
