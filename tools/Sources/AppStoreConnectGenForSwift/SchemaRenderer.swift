import Foundation
import AppStoreConnectGenKit

struct SchemaRenderer: Renderer {
    var schema: OpenAPISchema
    var scopeName: String
    var context: SwiftCodeBuilder.Context
    var filePath: String

    init(
        schema: OpenAPISchema,
        scope scopeName: String,
        context: SwiftCodeBuilder.Context,
        filePath: String
    ) {
        self.schema = schema
        self.scopeName = scopeName
        self.context = context
        self.filePath = filePath
    }

    func render() -> String? {
        let repr = findRepr(for: schema, with: schema.title ?? scopeName)
        guard let content = repr.buildDecl(context: context) else { return nil }

        let decl: Decl
        if let nest = context.nestings[scopeName] {
            let parent = TypeName(nest)
            decl = ExtensionDecl(nameComponents: { $0 + ["\(parent)"] }, body: [content])
        } else {
            decl = content
        }

        return """
        // autogenerated

        // swiftlint:disable all
        import Foundation

        \(SourceFile(decl: decl).render())

        // swiftlint:enable all

        """.cleaned()
    }
}
